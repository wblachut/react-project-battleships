[{"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\index.js":"1","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\App.js":"2","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\Player.js":"3","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\Game.js":"4","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\NewGame.js":"5","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\Header.js":"6","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\Intro.js":"7","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\Battleships.js":"8","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\GameBoard.js":"9"},{"size":521,"mtime":1611306717817,"results":"10","hashOfConfig":"11"},{"size":1170,"mtime":1611929743703,"results":"12","hashOfConfig":"11"},{"size":1852,"mtime":1611924026556,"results":"13","hashOfConfig":"11"},{"size":1014,"mtime":1611930719662,"results":"14","hashOfConfig":"11"},{"size":408,"mtime":1611660386951,"results":"15","hashOfConfig":"11"},{"size":682,"mtime":1611690772332,"results":"16","hashOfConfig":"11"},{"size":896,"mtime":1611580925129,"results":"17","hashOfConfig":"11"},{"size":9474,"mtime":1611855886576,"results":"18","hashOfConfig":"11"},{"size":3699,"mtime":1611930758494,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1v5hb06",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\index.js",[],["41","42"],"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\App.js",["43","44","45","46"],"import React, { useState } from \"react\";\n// import { GameBoard as Board } from './Battleships';\n// import { Player } from './Player'\nimport { CreatePlayer } from './Player'\n\nimport Header from \"./components/Header\";\nimport Intro from \"./components/Intro\";\nimport NewGame from \"./components/NewGame\";\nimport Game from \"./components/Game\";\nimport \"./style/App.css\";  \n\nconst App = () => {\n  let PlayerOne = CreatePlayer('light', 'human')\n  let PlayerTwo = CreatePlayer('dark', 'computer')\n  const [PlayerOneBoard, setP1Board] = useState(PlayerOne.gameBoard.board)\n  const [PlayerTwoBoard, setP2Board] = useState(PlayerTwo.gameBoard.board)\n  console.clear()\n  const [moveCount, setMoveCount] = useState(0)\n\n    return (\n      <div>\n        <Header/>\n        {/* <Intro /> */}\n        {/* <NewGame /> */}\n        <Game \n         PlayerOne = {PlayerOne}\n         PlayerTwo = {PlayerTwo}\n         PlayerOneBoard = {PlayerOneBoard}\n         PlayerTwoBoard = {PlayerTwoBoard}\n         setP1Board = {setP1Board}\n         setP2Board = {setP2Board}\n        />\n        <div className=\"stars\"></div>\n        <div className=\"twinkling\"></div>\n      </div>\n    );\n}\n\nexport default App","C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\Player.js",[],"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\Game.js",[],"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\NewGame.js",[],"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\Header.js",[],"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\Intro.js",[],"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\Battleships.js",[],"C:\\Users\\Wojtek\\OneDrive\\Dokumenty\\Programing\\react-project-battleships\\src\\components\\GameBoard.js",["47","48"],"import React from \"react\";\r\n\r\nconst GameBoard = (props) => {\r\n const {player,\r\n  PlayerBoard,\r\n  setPlayerBoard,\r\n  opponent,\r\n  OpponentBoard,\r\n  setOpponentBoard, setMoveCount, moveCount\r\n } = props\r\n// on outer side column with ships - on destroy add fire gif\r\n// if player show ships\r\n// add onClick function with \r\n// use different cursor eg. aim (find info on net)\r\n\r\nconst onMakeMove = (e) => {\r\n  // console.log(e.target.dataset.cord.split(',')[1])\r\n  const y = e.target.dataset.cord.split(',')[0];\r\n  const x = e.target.dataset.cord.split(',')[1];\r\n  // console.log(x, y)\r\n  opponent.makeMove(player, x, y)\r\n  // console.table(player.gameBoard.board)\r\n  setPlayerBoard(player.gameBoard.board)\r\n  // setMoveCount(moveCount+1)\r\n  console.table(PlayerBoard)\r\n  console.log(setPlayerBoard)\r\n  onAIMove();\r\n} \r\n\r\nconst onAIMove = () => {\r\n  player.makeAIMove(opponent)\r\n  setOpponentBoard(opponent.gameBoard.board)\r\n  console.table(OpponentBoard)\r\n}\r\n\r\n    return (\r\n      <div className={`${player.side} gameBoard`}>\r\n          <div className={`${player.side} side-title`}> The {player.side} side </div>\r\n          <div className=\"board-wrapper\">\r\n          <div className=\"column-description\">\r\n            {PlayerBoard.map((arr, i) => {\r\n             return <div className=\"numbers\" key={[i+1]}> {[i + 1]}  </div> })}\r\n          </div> \r\n          <div className=\"inner-wrapper\">\r\n            <div className={`${player.side} row-description`}> {PlayerBoard.map((arr, i) => {\r\n              return <div className=\"letters\" key={`letter${i}`}> {(i + 10).toString(36)} </div> })}</div>\r\n\r\n              {/* grid */}\r\n            <div className={`${player.side} grid-wrapper`}>\r\n              {PlayerBoard.map((arr, j) =>\r\n               arr.map((element, i) => {\r\n                if (player.type === 'human') {\r\n                  if (element === '_' || element === '*') {\r\n                    return <div className=\"cell\"\r\n                      data-cord={[(j+1), (i+1)]}\r\n                      key={[j+1, i+1]}>\r\n                    </div>\r\n                  } else if ( (Number.isInteger(parseInt(element))) ) {\r\n                    return <div className={`cell ship ship${element}`}\r\n                      data-cord={[j+1, i+1]}\r\n                      key={[j+1, i+1]}>\r\n                    </div>\r\n                  } else if (element === '※') {\r\n                    return <div className={`cell hit ship`} data-cord={[j+1, i+1]} key={[j+1, i+1]}> \r\n                    <img src=\"./images/flame.gif\" alt=\"aj\"/>\r\n                    </div>\r\n                  } else  {\r\n                    return <div className={`cell empty`} data-cord={[j+1, i+1]} key={[j+1, i+1]}> •\r\n                    </div>\r\n                  }\r\n                }\r\n                // ai board\r\n                else {\r\n                  // add different displays to different element vals: fire to ※, empty to  •\r\n                  if (element === '•') {\r\n                    return <div className=\"cell empty\" data-cord={[(j+1), (i+1)]}\r\n                    key={[j+1, i+1]} > • </div>\r\n                  } else if (element === '※') {\r\n                    return <div className=\"cell hit\"\r\n                     data-cord={[(j+1), (i+1)]} key={[j+1, i+1]} >\r\n                       <img src=\"./images/flame.gif\" alt=\"a\"/>\r\n                    </div>\r\n                  } else {\r\n                  return <div className=\"cell\" data-cord={[(j+1), (i+1)]}\r\n                  key={[j+1, i+1]}\r\n                  onClick={(e) => onMakeMove(e)}> </div> }\r\n                }\r\n              } ))} </div>\r\n            </div>\r\n        </div>\r\n      </div>        \r\n    )\r\n}\r\n\r\nexport default React.memo(GameBoard)\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":8,"column":8,"nodeType":"55","messageId":"56","endLine":8,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":18,"column":10,"nodeType":"55","messageId":"56","endLine":18,"endColumn":19},{"ruleId":"53","severity":1,"message":"59","line":18,"column":21,"nodeType":"55","messageId":"56","endLine":18,"endColumn":33},{"ruleId":"53","severity":1,"message":"59","line":9,"column":21,"nodeType":"55","messageId":"56","endLine":9,"endColumn":33},{"ruleId":"53","severity":1,"message":"58","line":9,"column":35,"nodeType":"55","messageId":"56","endLine":9,"endColumn":44},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Intro' is defined but never used.","Identifier","unusedVar","'NewGame' is defined but never used.","'moveCount' is assigned a value but never used.","'setMoveCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]