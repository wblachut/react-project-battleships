{"version":3,"sources":["Battleships.js","Player.js","components/Header.js","components/GameBoard.js","components/Game.js","App.js","index.js"],"names":["Ship","name","size","direction","ship","hitState","Array","fill","hit","nextHit","findIndex","field","isSunk","includes","GameBoard","playerSide","gameBoard","side","board","ships","shipCount","isReady","isGameOver","emptyBoard","makeBoard","getShips","starFighter","starFighter2","superStarFighter","superStarFighter2","starDestroyer","superStarDestroyer","shipArray","push","map","id","changeShipDirection","receiveAttack","xCord","yCord","isLegalMove","val","console","log","Number","isInteger","parseInt","attackedShip","markShipArea","checkGameOver","info","checkPlacement","isLegalPlace","j","Y","i","X","placeShip","forEach","cell","onBoard","coordinates","mark","placeShipsAtRandom","reversedShips","reverse","randomlyPlaceShip","randX","Math","ceil","random","randY","Player","type","player","isWinner","isMakingMove","makeMove","opponent","makeAIMove","legal","passMove","hasWon","CreatePlayer","boardLightSide","Board","boardDarkSide","Header","className","href","icon","props","useState","setBoard","opponentBoard","setOpponentBoard","friendlyShipCount","setFriendlyShipsCount","useEffect","handleHumanPlayerShipDisplay","handleComputerShipDisplay","onAIMove","mountShip","cords","startingCell","document","querySelector","shipImg","createElement","src","process","alt","classList","add","targetAble","appendChild","arr","toString","element","data-cord","onClick","e","y","target","dataset","cord","split","x","onMakeMove","React","memo","Game","PlayerOne","PlayerTwo","App","winner","setWinner","clear","library","fab","fas","faTrash","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9958868b.chunk.js","sourcesContent":["// Spaceships:\r\n// star fighters: (TIE-fighter, x-wing, y-wing)\r\n// (shuttle, star-fighter, bomber, destroyer, magister-destroyer)\r\n// https://starwars.fandom.com/wiki/Starfighter/Legends\r\n//\r\n// ships images visible on sides of boardgames\r\n// ship damaged => ember gif on the ship image\r\n// ship destroyed => red opacity\r\n// lose/win => different icon appearing\r\n// Battleship.Proto\r\n\r\nexport const Ship = (name, size, direction = 'horizontal') => {\r\n\tconst ship = {\r\n\t\tname,\r\n\t\tsize,\r\n\t\tdirection,\r\n\t\thitState: Array(size).fill('o'),\r\n\t\thit: () => {\r\n\t\t\tlet nextHit = ship.hitState.findIndex((field) => field === 'o')\r\n\t\t\tship.hitState[nextHit] = 'hit'\r\n\t\t},\r\n\t\tisSunk: () => !ship.hitState.includes('o'),\r\n\t}\r\n\treturn ship\r\n}\r\n\r\nexport const GameBoard = (playerSide) => {\r\n\tconst gameBoard = {\r\n\t\tside: playerSide,\r\n\t\tboard: [],\r\n\t\tships: [],\r\n\t\tshipCount: 0,\r\n\t\tisReady: false,\r\n\t\tisGameOver: false,\r\n\r\n\t\temptyBoard: () => {\r\n\t\t\treturn [\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t]\r\n\t\t},\r\n\t\tmakeBoard: () => {\r\n\t\t\tgameBoard.board = gameBoard.emptyBoard()\r\n\t\t},\r\n\t\tgetShips: (playerSide) => {\r\n\t\t\tlet shipArray = []\r\n\t\t\tlet starFighter, starFighter2\r\n\t\t\tlet superStarFighter, superStarFighter2\r\n\t\t\tlet starDestroyer\r\n\t\t\tlet superStarDestroyer\r\n\t\t\tif (playerSide === 'dark') {\r\n\t\t\t\tstarFighter = Ship('TIE-fighter', 1)\r\n\t\t\t\tstarFighter2 = Ship('TIE-fighter', 1)\r\n\t\t\t\tsuperStarFighter = Ship('TIE-bomber', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('TIE-bomber', 2)\r\n\t\t\t\tstarDestroyer = Ship('Star Destroyer', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('Super Star Destroyer', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\tstarFighter = Ship('Shuttle', 1)\r\n\t\t\t\tstarFighter2 = Ship('Shuttle', 1)\r\n\t\t\t\tsuperStarFighter = Ship('X-wing', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('X-wing', 2)\r\n\t\t\t\tstarDestroyer = Ship('Rebel heavy ship', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('Rebel Super Ship', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tshipArray.map((ship, id) => (ship.id = id + 1))\r\n\t\t\tgameBoard.ships = shipArray\r\n\t\t\treturn shipArray\r\n\t\t},\r\n\t\tchangeShipDirection: (ship) => {\r\n\t\t\tship.direction === 'horizontal' && ship.size > 1\r\n\t\t\t\t? (ship.direction = 'vertical')\r\n\t\t\t\t: (ship.direction = 'horizontal')\r\n\t\t},\r\n\t\treceiveAttack: (xCord, yCord) => {\r\n\t\t\tlet isLegalMove = true\r\n\t\t\tconst val = gameBoard.board[yCord - 1][xCord - 1]\r\n\t\t\tif (val === '_' || val === '*') {\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '•'\r\n\t\t\t\tconsole.log('miss !!')\r\n\t\t\t\t// if is a ship\r\n\t\t\t} else if (Number.isInteger(parseInt(val))) {\r\n\t\t\t\t// pass a hit to a ship\r\n\t\t\t\tlet attackedShip = gameBoard.ships[parseInt(val) - 1]\r\n\t\t\t\tattackedShip.hit()\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`hit a ship! field number: ${parseInt(val)}, attacked id: ${\r\n\t\t\t\t\t\tattackedShip.id\r\n\t\t\t\t\t}`\r\n\t\t\t\t)\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '※'\r\n\r\n\t\t\t\tif (attackedShip.isSunk()) {\r\n\t\t\t\t\tconsole.log(`${attackedShip.name} was destroyed`)\r\n\t\t\t\t\tgameBoard.markShipArea('•', attackedShip)\r\n\t\t\t\t\tgameBoard.shipCount--\r\n\t\t\t\t\tgameBoard.checkGameOver()\r\n\t\t\t\t\tif (gameBoard.isGameOver === true) console.info('Game Over')\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisLegalMove = false\r\n\t\t\t}\r\n\t\t\t// if (isLegalMove) {\r\n\t\t\t// \tconsole.log('move was legal...')\r\n\t\t\t// }\r\n\t\t\treturn isLegalMove\r\n\t\t},\r\n\r\n\t\tcheckPlacement: (ship, xCord, yCord) => {\r\n\t\t\t// X, Y - coords to be checked\r\n\t\t\tlet isLegalPlace = true\r\n\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\tif (ship.size + xCord - 1 > 10) isLegalPlace = false\r\n\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\tlet Y = yCord - 2 + j\r\n\t\t\t\t\tif (0 <= Y && Y <= 9) {\r\n\t\t\t\t\t\tfor (let i = 0; i < ship.size + 2; i++) {\r\n\t\t\t\t\t\t\tlet X = xCord - 2 + i\r\n\t\t\t\t\t\t\tif (0 <= X && X <= 9) {\r\n\t\t\t\t\t\t\t\tif (gameBoard.board[Y][X] !== '_') {\r\n\t\t\t\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\tif (ship.size + yCord - 1 > 10) isLegalPlace = false\r\n\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\tlet X = xCord - 2 + j\r\n\t\t\t\t\tif (0 <= X && X <= 9) {\r\n\t\t\t\t\t\tfor (let i = 0; i < ship.size + 2; i++) {\r\n\t\t\t\t\t\t\tlet Y = yCord - 2 + i\r\n\t\t\t\t\t\t\tif (0 <= Y && Y <= 9) {\r\n\t\t\t\t\t\t\t\tif (gameBoard.board[Y][X] !== '_') {\r\n\t\t\t\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tisLegalPlace ? console.log('legal place') : console.log('Illegal place!')\r\n\t\t\treturn isLegalPlace\r\n\t\t},\r\n\r\n\t\tplaceShip: (ship, xCord, yCord) => {\r\n\t\t\t// yCord - row cord (array)\r\n\t\t\t// xCord - column cord (array element)\r\n\t\t\tif (gameBoard.checkPlacement(ship, xCord, yCord)) {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + i] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 1] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tgameBoard.markShipArea('*', ship, xCord, yCord)\r\n\t\t\t\tship.onBoard = true\r\n\t\t\t\tship.coordinates = [xCord, yCord]\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${ship.name} was placed ${ship.direction} on ${ship.coordinates}`\r\n\t\t\t\t)\r\n\t\t\t\tgameBoard.shipCount++\r\n\t\t\t\tif (gameBoard.shipCount === 6) {\r\n\t\t\t\t\tgameBoard.isReady = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmarkShipArea: (\r\n\t\t\tmark,\r\n\t\t\tship,\r\n\t\t\txCord = ship.coordinates[0],\r\n\t\t\tyCord = ship.coordinates[1]\r\n\t\t) => {\r\n\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// vertical areas\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xCord + ship.size < 10) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 2] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord + ship.size < 10) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tplaceShipsAtRandom: () => {\r\n\t\t\tlet reversedShips = [...gameBoard.ships].reverse()\r\n\t\t\twhile (gameBoard.shipCount < 6) {\r\n\t\t\t\treversedShips.forEach((ship) => {\r\n\t\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trandomlyPlaceShip: (ship) => {\r\n\t\t\tif (ship.onBoard !== true) {\r\n\t\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\t\tif (Math.random() * 2 > 1) gameBoard.changeShipDirection(ship)\r\n\t\t\t\tgameBoard.placeShip(ship, randX, randY)\r\n\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckGameOver: () => {\r\n\t\t\t// console.log('Game over? ', gameBoard.shipCount === 0)\r\n\t\t\tif (gameBoard.shipCount === 0) {\r\n\t\t\t\tgameBoard.isGameOver = true\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t},\r\n\t}\r\n\treturn gameBoard\r\n}\r\n","import { GameBoard as Board } from './Battleships'\r\n\r\nexport const Player = (name, side, type = 'human', gameBoard) => {\r\n\tconst player = {\r\n\t\tname,\r\n\t\tside,\r\n\t\ttype,\r\n\t\tgameBoard,\r\n\t\tisWinner: false,\r\n\t\tisMakingMove: false,\r\n\t\tmakeMove: (opponent, xCord, yCord) => {\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(xCord, yCord)\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(xCord, yCord)\r\n\t\t\t\t// player.passMove(opponent)\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('NOT A LEGAL MOVE')\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tmakeAIMove: (opponent) => {\r\n\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\tconsole.log('AI Move:', randX, randY, 'was legal?', legal)\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\t\t// console.log(opponent.gameBoard)\r\n\t\t\t\t// player.passMove(opponent)\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tplayer.makeAIMove(opponent)\r\n\t\t\t}\r\n\t\t},\r\n\t\tpassMove: (opponent) => {\r\n\t\t\tplayer.isMakingMove = false\r\n\t\t\topponent.isMakingMove = true\r\n\t\t},\r\n\r\n\t\thasWon: (board) => {\r\n\t\t\t// opposite board\r\n\t\t\tboard.isGameOver === true\r\n\t\t\t\t? (player.isWinner = true)\r\n\t\t\t\t: (player.isWinner = false)\r\n\t\t},\r\n\t}\r\n\treturn player\r\n}\r\n\r\nexport const CreatePlayer = (side, type) => {\r\n\tif (side === 'light') {\r\n\t\tlet boardLightSide = Board('light side')\r\n\t\tboardLightSide.makeBoard()\r\n\t\tboardLightSide.getShips()\r\n\t\tboardLightSide.placeShipsAtRandom()\r\n\t\treturn Player('Jedi Master', side, type, boardLightSide)\r\n\t}\r\n\tif (side === 'dark') {\r\n\t\tlet boardDarkSide = Board('dark side')\r\n\t\tboardDarkSide.makeBoard()\r\n\t\tboardDarkSide.getShips('dark')\r\n\t\tboardDarkSide.placeShipsAtRandom()\r\n\t\treturn Player('Lord Sith', side, type, boardDarkSide)\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header-row\">\r\n\t\t\t\t<h1 className=\"col-sm-8\">\r\n\t\t\t\t\t<span className=\"title1\">SpaceShips </span>{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://github.com/wblachut/react-project-battleships\"\r\n\t\t\t\t\tclassName=\"gh-btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"gh-icon\" />\r\n\t\t\t\t</a>\r\n\t\t\t\t<i className=\"fab fa-github\"></i>\r\n\t\t\t</div>\r\n\t\t\t<nav></nav>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","/* eslint-disable no-undef */\r\nimport React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n//maybe problem is caused because of 2 game boards, check if they are special ?\r\n\r\nconst GameBoard = (props) => {\r\n\tconst { player, opponent } = props\r\n\t// add outer side column with ships - on destroy add fire gif\r\n\t// use different cursor eg. aim (find info on net) ?\r\n\tconst [board, setBoard] = useState(player.gameBoard.board)\r\n\tconst [opponentBoard, setOpponentBoard] = useState(opponent.gameBoard.board)\r\n\tconst [friendlyShipCount, setFriendlyShipsCount] = useState(\r\n\t\tplayer.gameBoard.shipCount\r\n\t)\r\n\tconsole.log(opponentBoard)\r\n\r\n\tuseEffect(() => {\r\n\t\thandleHumanPlayerShipDisplay()\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\thandleComputerShipDisplay()\r\n\t\tconsole.log('use Effect:', friendlyShipCount)\r\n\t}, [friendlyShipCount])\r\n\r\n\tconst onMakeMove = (e) => {\r\n\t\t// console.log(e.currentTarget)\r\n\t\t// console.log(e.currentTarget.dataset.cord)\r\n\t\tconst y = e.target.dataset.cord.split(',')[0]\r\n\t\tconst x = e.target.dataset.cord.split(',')[1]\r\n\t\t// console.log(x, y)\r\n\t\topponent.makeMove(player, x, y)\r\n\t\tsetBoard(player.gameBoard.board)\r\n\t\tsetFriendlyShipsCount(player.gameBoard.shipCount)\r\n\t\t// console.table(board)\r\n\t\tonAIMove()\r\n\t}\r\n\r\n\tconst onAIMove = () => {\r\n\t\tplayer.makeAIMove(opponent)\r\n\t\tsetOpponentBoard(opponent.gameBoard.board)\r\n\t\t// console.table(opponentBoard)\r\n\t}\r\n\r\n\tconst handleHumanPlayerShipDisplay = () => {\r\n\t\tif (player.type === 'human')\r\n\t\t\tplayer.gameBoard.ships.map((ship) => {\r\n\t\t\t\tmountShip(ship)\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst handleComputerShipDisplay = () => {\r\n\t\tif (player.type === 'computer')\r\n\t\t\tplayer.gameBoard.ships.map((ship) => {\r\n\t\t\t\tif (ship.isSunk() === true) {\r\n\t\t\t\t\tmountShip(ship)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst mountShip = (ship) => {\r\n\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]]\r\n\t\t// console.log(ship.name, ship.coordinates)\r\n\t\tconst playerBoardDiv = document.querySelector(`.${player.side}`)\r\n\t\t// console.log(playerBoardDiv)\r\n\t\tconst startingCell = playerBoardDiv.querySelector(\r\n\t\t\t`div[data-cord=\"${cords}\"]`\r\n\t\t)\r\n\t\tif (!startingCell.querySelector('.ship-img-grid')) {\r\n\t\t\t// console.log(startingCell)\r\n\t\t\tconst shipImg = document.createElement('img')\r\n\t\t\tshipImg.src =\r\n\t\t\t\tprocess.env.PUBLIC_URL + `/images/${player.side}${ship.id}.png`\r\n\t\t\tshipImg.alt = `ship-${player.side}${ship.id}`\r\n\t\t\tshipImg.classList.add(`ship-img-grid`)\r\n\t\t\tshipImg.classList.add(ship.direction)\r\n\t\t\tshipImg.targetAble = false\r\n\t\t\tstartingCell.appendChild(shipImg)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`${player.side} gameBoard`}>\r\n\t\t\t<div className={`${player.side} side-title`}>The {player.side} side</div>\r\n\t\t\t<div className=\"board-wrapper\">\r\n\t\t\t\t<div className=\"column-description\">\r\n\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"numbers\" key={[i + 1]}>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{[i + 1]}{' '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inner-wrapper\">\r\n\t\t\t\t\t<div className={`${player.side} row-description`}>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className=\"letters\" key={`letter${i}`}>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t{(i + 10).toString(36)}{' '}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* grid */}\r\n\t\t\t\t\t<div className={`${player.side} grid-wrapper`}>\r\n\t\t\t\t\t\t{board.map((arr, j) =>\r\n\t\t\t\t\t\t\tarr.map((element, i) => {\r\n\t\t\t\t\t\t\t\tif (player.type === 'human') {\r\n\t\t\t\t\t\t\t\t\tif (element === '_' || element === '*') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else if (Number.isInteger(parseInt(element))) {\r\n\t\t\t\t\t\t\t\t\t\tlet ship = player.gameBoard.ships[element - 1]\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell ship ship${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {(i + 1, j + 1) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(ship.coordinates[0], ship.coordinates[1]) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-img-grid ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell hit ship`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"flames\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell empty`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// AI board\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (element === '•') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell hit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"as\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => onMakeMove(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"ship-wrapper\">\r\n\t\t\t\t{player.gameBoard.ships.map((ship) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"ship-view\" key={`ship${ship.id}`}>\r\n\t\t\t\t\t\t\t{/* <img\r\n\t\t\t\t\t\t\t\tclassName={`ship-img`}\r\n\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default React.memo(GameBoard)\r\n\r\nGameBoard.propTypes = {\r\n\tplayer: PropTypes.object,\r\n\tPlayerBoard: PropTypes.array,\r\n\tsetPlayerBoard: PropTypes.func,\r\n\topponent: PropTypes.object,\r\n\tOpponentBoard: PropTypes.array,\r\n\tsetOpponentBoard: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../style/Game.css'\r\nimport GameBoard from './GameBoard'\r\n\r\nconst Game = (props) => {\r\n\treturn (\r\n\t\t<div className=\"game\">\r\n\t\t\t<GameBoard player={props.PlayerOne} opponent={props.PlayerTwo} />\r\n\t\t\t<GameBoard player={props.PlayerTwo} opponent={props.PlayerOne} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Game\r\n\r\nGame.propTypes = {\r\n\tplayer: PropTypes.object,\r\n\tPlayerBoard: PropTypes.array,\r\n\tsetPlayerBoard: PropTypes.func,\r\n\topponent: PropTypes.object,\r\n\tOpponentBoard: PropTypes.array,\r\n\tsetOpponentBoard: PropTypes.func,\r\n\tPlayerOne: PropTypes.object,\r\n\tPlayerTwo: PropTypes.object,\r\n\tPlayerOneBoard: PropTypes.array,\r\n\tsetP1Board: PropTypes.func,\r\n\tPlayerTwoBoard: PropTypes.array,\r\n\tsetP2Board: PropTypes.func,\r\n}\r\n","import React, { useState } from 'react'\nimport { CreatePlayer } from './Player'\n\nimport Header from './components/Header'\n// import Intro from \"./components/Intro\";\n// import NewGame from \"./components/NewGame\";\nimport Game from './components/Game'\n// import Announcer from './components/Announcer'\nimport './style/App.css'\n\nconst App = () => {\n\tlet PlayerOne = CreatePlayer('light', 'human')\n\tlet PlayerTwo = CreatePlayer('dark', 'computer')\n\tconst [winner, setWinner] = useState('')\n\tconsole.clear()\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t{/* <Intro /> */}\n\t\t\t{/* <NewGame /> */}\n\t\t\t<Game\n\t\t\t\tPlayerOne={PlayerOne}\n\t\t\t\tPlayerTwo={PlayerTwo}\n\t\t\t\tsetWinner={setWinner}\n\t\t\t\twinner={winner}\n\t\t\t/>\n\t\t\t{/* <Announcer winner={winner} setWinner={setWinner} /> */}\n\t\t\t<div className=\"stars\"></div>\n\t\t\t<div className=\"twinkling\"></div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style/index.css'\nimport './style/night-sky.css'\nimport App from './App'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fab, fas, faTrash)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}