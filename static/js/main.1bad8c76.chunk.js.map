{"version":3,"sources":["Battleships.js","Player.js","components/Header.js","components/Announcer.js","App.js","index.js"],"names":["Ship","name","size","direction","ship","hitState","Array","fill","hit","nextHit","findIndex","field","isSunk","includes","GameBoard","playerSide","gameBoard","side","board","ships","shipCount","isReady","isGameOver","emptyBoard","makeBoard","getShips","starFighter","starFighter2","superStarFighter","superStarFighter2","starDestroyer","superStarDestroyer","shipArray","push","map","id","changeShipDirection","receiveAttack","xCord","yCord","isLegalMove","Number","isInteger","parseInt","shipId","attackedShip","console","log","markShipArea","checkGameOver","checkPlacement","isLegalPlace","j","Y","i","X","placeShip","forEach","cell","onBoard","coordinates","mark","placeShipsAtRandom","reversedShips","reverse","randomlyPlaceShip","randX","Math","ceil","random","randY","Player","type","player","isWinner","isMakingMove","makeMove","opponent","makeAIMove","legal","passMove","hasWon","Header","className","href","icon","Announcer","winner","src","alt","App","PlayerOne","boardLightSide","Board","boardDarkSide","CreatePlayer","useState","setWinner","clear","library","add","fab","fas","faTrash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bad8c76.chunk.js","sourcesContent":["// Spaceships:\r\n// star fighters: (TIE-fighter, x-wing, y-wing)\r\n// (shuttle, star-fighter, bomber, destroyer, magister-destroyer)\r\n// https://starwars.fandom.com/wiki/Starfighter/Legends\r\n//\r\n// ships images visible on sides of boardgames\r\n// ship damaged => ember gif on the ship image\r\n// ship destroyed => red opacity\r\n// lose/win => different icon appearing\r\n// Battleship.Proto\r\n\r\nexport const Ship = (name, size, direction = 'horizontal') => {\r\n\tconst ship = {\r\n\t\tname,\r\n\t\tsize,\r\n\t\tdirection,\r\n\t\thitState: Array(size).fill('o'),\r\n\t\thit: () => {\r\n\t\t\tlet nextHit = ship.hitState.findIndex((field) => field === 'o')\r\n\t\t\tship.hitState[nextHit] = 'hit'\r\n\t\t},\r\n\t\tisSunk: () => !ship.hitState.includes('o'),\r\n\t}\r\n\treturn ship\r\n}\r\n\r\nexport const GameBoard = (playerSide) => {\r\n\tconst gameBoard = {\r\n\t\tside: playerSide,\r\n\t\tboard: [],\r\n\t\tships: [],\r\n\t\tshipCount: 0,\r\n\t\tisReady: false,\r\n\t\tisGameOver: false,\r\n\r\n\t\temptyBoard: () => {\r\n\t\t\treturn [\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t]\r\n\t\t},\r\n\t\tmakeBoard: () => {\r\n\t\t\tgameBoard.board = gameBoard.emptyBoard()\r\n\t\t},\r\n\t\tgetShips: (playerSide) => {\r\n\t\t\tlet shipArray = []\r\n\t\t\tlet starFighter, starFighter2\r\n\t\t\tlet superStarFighter, superStarFighter2\r\n\t\t\tlet starDestroyer\r\n\t\t\tlet superStarDestroyer\r\n\t\t\tif (playerSide === 'dark') {\r\n\t\t\t\tstarFighter = Ship('TIE-fighter', 1)\r\n\t\t\t\tstarFighter2 = Ship('TIE-fighter', 1)\r\n\t\t\t\tsuperStarFighter = Ship('TIE-bomber', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('TIE-bomber', 2)\r\n\t\t\t\tstarDestroyer = Ship('Star Destroyer', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('Super Star Destroyer', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\tstarFighter = Ship('Shuttle', 1)\r\n\t\t\t\tstarFighter2 = Ship('Shuttle', 1)\r\n\t\t\t\tsuperStarFighter = Ship('X-wing', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('X-wing', 2)\r\n\t\t\t\tstarDestroyer = Ship('Rebel heavy ship', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('Rebel Super Ship', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tshipArray.map((ship, id) => (ship.id = id + 1))\r\n\t\t\tgameBoard.ships = shipArray\r\n\t\t\treturn shipArray\r\n\t\t},\r\n\t\tchangeShipDirection: (ship) => {\r\n\t\t\tship.direction === 'horizontal'\r\n\t\t\t\t? (ship.direction = 'vertical')\r\n\t\t\t\t: (ship.direction = 'horizontal')\r\n\t\t},\r\n\t\treceiveAttack: (xCord, yCord) => {\r\n\t\t\tlet isLegalMove = true\r\n\t\t\tif (\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] === '_' ||\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] === '*'\r\n\t\t\t) {\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '•'\r\n\t\t\t\t// if is a ship\r\n\t\t\t} else if (\r\n\t\t\t\tNumber.isInteger(parseInt(gameBoard.board[yCord - 1][xCord - 1]))\r\n\t\t\t) {\r\n\t\t\t\t// pass a hit to ship\r\n\t\t\t\tlet shipId = parseInt(gameBoard.board[yCord - 1][xCord - 1])\r\n\t\t\t\tlet attackedShip = gameBoard.ships[shipId - 1]\r\n\t\t\t\tattackedShip.hit()\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`hit a ship, field number: ${shipId}, attacked id: ${attackedShip.id}`\r\n\t\t\t\t)\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '※'\r\n\r\n\t\t\t\tif (attackedShip.isSunk()) {\r\n\t\t\t\t\tconsole.log(`${attackedShip.name} was destroyed`)\r\n\t\t\t\t\tgameBoard.markShipArea('•', attackedShip)\r\n\t\t\t\t\tgameBoard.shipCount--\r\n\t\t\t\t\tgameBoard.checkGameOver()\r\n\t\t\t\t\tif (gameBoard.isGameOver === true) {\r\n\t\t\t\t\t\tconsole.log('Game Over')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('NOT A LEGAL MOVE')\r\n\t\t\t\tisLegalMove = false\r\n\t\t\t}\r\n\t\t\tif (isLegalMove) {\r\n\t\t\t\t// && !isGameOver\r\n\t\t\t\tconsole.log('move was legal...')\r\n\t\t\t\t// pass a turn\r\n\t\t\t}\r\n\t\t\treturn isLegalMove\r\n\t\t},\r\n\r\n\t\tcheckPlacement: (ship, xCord, yCord) => {\r\n\t\t\t// X, Y - coords to be checked\r\n\t\t\tlet isLegalPlace = true\r\n\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\tif (ship.size + xCord - 1 > 10) isLegalPlace = false\r\n\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\tlet Y = yCord - 2 + j\r\n\t\t\t\t\tif (0 <= Y && Y <= 9) {\r\n\t\t\t\t\t\tfor (let i = 0; i < ship.size + 2; i++) {\r\n\t\t\t\t\t\t\tlet X = xCord - 2 + i\r\n\t\t\t\t\t\t\tif (0 <= X && X <= 9) {\r\n\t\t\t\t\t\t\t\tif (gameBoard.board[Y][X] !== '_') {\r\n\t\t\t\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\tif (ship.size + yCord - 1 > 10) isLegalPlace = false\r\n\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\tlet X = xCord - 2 + j\r\n\t\t\t\t\tif (0 <= X && X <= 9) {\r\n\t\t\t\t\t\tfor (let i = 0; i < ship.size + 2; i++) {\r\n\t\t\t\t\t\t\tlet Y = yCord - 2 + i\r\n\t\t\t\t\t\t\tif (0 <= Y && Y <= 9) {\r\n\t\t\t\t\t\t\t\tif (gameBoard.board[Y][X] !== '_') {\r\n\t\t\t\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tisLegalPlace ? console.log('legal place') : console.log('Illegal place!')\r\n\t\t\treturn isLegalPlace\r\n\t\t},\r\n\r\n\t\tplaceShip: (ship, xCord, yCord) => {\r\n\t\t\t// yCord - row cord (array)\r\n\t\t\t// xCord - column cord (array element)\r\n\t\t\tif (gameBoard.checkPlacement(ship, xCord, yCord)) {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + i] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 1] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tgameBoard.markShipArea('*', ship, xCord, yCord)\r\n\t\t\t\tship.onBoard = true\r\n\t\t\t\tship.coordinates = [xCord, yCord]\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${ship.name} was placed ${ship.direction} on ${ship.coordinates}`\r\n\t\t\t\t)\r\n\t\t\t\tgameBoard.shipCount++\r\n\t\t\t\tif (gameBoard.shipCount === 6) {\r\n\t\t\t\t\tgameBoard.isReady = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmarkShipArea: (\r\n\t\t\tmark,\r\n\t\t\tship,\r\n\t\t\txCord = ship.coordinates[0],\r\n\t\t\tyCord = ship.coordinates[1]\r\n\t\t) => {\r\n\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// vertical areas\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xCord + ship.size < 10) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 2] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord + ship.size < 10) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tplaceShipsAtRandom: () => {\r\n\t\t\tlet reversedShips = [...gameBoard.ships].reverse()\r\n\t\t\twhile (gameBoard.shipCount < 6) {\r\n\t\t\t\treversedShips.forEach((ship) => {\r\n\t\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trandomlyPlaceShip: (ship) => {\r\n\t\t\tif (ship.onBoard !== true) {\r\n\t\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\t\tif (Math.random() * 2 > 1) gameBoard.changeShipDirection(ship)\r\n\t\t\t\tgameBoard.placeShip(ship, randX, randY)\r\n\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckGameOver: () => {\r\n\t\t\tconsole.log('Game over? ', gameBoard.shipCount === 0)\r\n\t\t\tif (gameBoard.shipCount === 0) {\r\n\t\t\t\tgameBoard.isGameOver = true\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t},\r\n\t}\r\n\treturn gameBoard\r\n}\r\n","import { GameBoard as Board } from './Battleships'\r\n\r\nexport const Player = (name, side, type = 'human', gameBoard) => {\r\n\tconst player = {\r\n\t\tname,\r\n\t\tside,\r\n\t\ttype,\r\n\t\tgameBoard,\r\n\t\tisWinner: false,\r\n\t\tisMakingMove: false,\r\n\t\tmakeMove: (opponent, xCord, yCord) => {\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(xCord, yCord)\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(xCord, yCord)\r\n\t\t\t\t// player.passMove(opponent)\r\n\t\t\t\treturn true\r\n\t\t\t} else return false\r\n\t\t},\r\n\t\tmakeAIMove: (opponent) => {\r\n\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\tconsole.log(randX, randY, legal)\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\t\tconsole.log(opponent.gameBoard)\r\n\t\t\t\t// player.passMove(opponent)\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tplayer.makeAIMove(opponent)\r\n\t\t\t}\r\n\t\t},\r\n\t\tpassMove: (opponent) => {\r\n\t\t\tplayer.isMakingMove = false\r\n\t\t\topponent.isMakingMove = true\r\n\t\t},\r\n\r\n\t\thasWon: (board) => {\r\n\t\t\t// opposite board\r\n\t\t\tboard.isGameOver === true\r\n\t\t\t\t? (player.isWinner = true)\r\n\t\t\t\t: (player.isWinner = false)\r\n\t\t},\r\n\t}\r\n\treturn player\r\n}\r\n\r\nexport const CreatePlayer = (side, type) => {\r\n\tif (side === 'light') {\r\n\t\tlet boardLightSide = Board('light side')\r\n\t\tboardLightSide.makeBoard()\r\n\t\tboardLightSide.getShips()\r\n\t\tboardLightSide.placeShipsAtRandom()\r\n\t\treturn Player('Jedi Master', side, type, boardLightSide)\r\n\t}\r\n\tif (side === 'dark') {\r\n\t\tlet boardDarkSide = Board('dark side')\r\n\t\tboardDarkSide.makeBoard()\r\n\t\tboardDarkSide.getShips('dark')\r\n\t\tboardDarkSide.placeShipsAtRandom()\r\n\t\treturn Player('Lord Sith', side, type, boardDarkSide)\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<div className='header-row'>\r\n\t\t\t\t<h1 className='col-sm-8'>\r\n\t\t\t\t\t<span className='title1'>SpaceShips </span>{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='https://github.com/wblachut/react-project-battleships'\r\n\t\t\t\t\tclassName='gh-btn'\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className='gh-icon' />\r\n\t\t\t\t</a>\r\n\t\t\t\t<i className='fab fa-github'></i>\r\n\t\t\t</div>\r\n\t\t\t<nav></nav>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Announcer = ({ winner }) => {\r\n\treturn (\r\n\t\t<div className='announcer-wrapper'>\r\n\t\t\t<div className={`announcer ${winner.side}`}>\r\n\t\t\t\t<h1 className=''>{winner.name} has won!</h1>\r\n\t\t\t\t{winner.side === 'light' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tHrrmmm. A true leader you are. About your tactical prowess all\r\n\t\t\t\t\t\tgalaxies should know. <img src='./images/yoda.gif' alt='yoda-gif' />\r\n\t\t\t\t\t\tpublic\\images\\yoda.gif\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t\t{winner.side === 'dark' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tThe force is strong with you, you could be with good use to the dark\r\n\t\t\t\t\t\tside. We shall see what to do with you.{' '}\r\n\t\t\t\t\t\t<img src='./images/lose.gif' alt='darth-vader-gif' />\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t\t<button className='new-game-btn'>Play again!</button>\r\n\t\t\t</div>\r\n\t\t\t<img src='./images/flame.gif' alt='x-wing gif' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Announcer\r\n\r\nAnnouncer.propTypes = {\r\n\twinner: PropTypes.object,\r\n}\r\n","import React, { useState } from 'react'\nimport { CreatePlayer } from './Player'\n\nimport Header from './components/Header'\n// import Intro from \"./components/Intro\";\n// import NewGame from \"./components/NewGame\";\n// import Game from './components/Game'\nimport Announcer from './components/Announcer'\nimport './style/App.css'\n\nconst App = () => {\n\tlet PlayerOne = CreatePlayer('light', 'human')\n\t// let PlayerTwo = CreatePlayer('dark', 'computer')\n\t// const [PlayerOneBoard, setP1Board] = useState(PlayerOne.gameBoard.board)\n\t// const [PlayerTwoBoard, setP2Board] = useState(PlayerTwo.gameBoard.board)\n\tconst [winner, setWinner] = useState(PlayerOne)\n\t// const [winner, setWinner] = useState(PlayerTwo)\n\tconsole.clear()\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t{/* <Intro /> */}\n\t\t\t{/* <NewGame /> */}\n\t\t\t{/* <Game\n\t\t\t\tPlayerOne={PlayerOne}\n\t\t\t\tPlayerTwo={PlayerTwo}\n\t\t\t\tPlayerOneBoard={PlayerOneBoard}\n\t\t\t\tPlayerTwoBoard={PlayerTwoBoard}\n\t\t\t\tsetP1Board={setP1Board}\n\t\t\t\tsetP2Board={setP2Board}\n\t\t\t\tsetWinner={setWinner}\n\t\t\t/> */}\n\t\t\t<Announcer winner={winner} setWinner={setWinner} />\n\t\t\t<div className='stars'></div>\n\t\t\t<div className='twinkling'></div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style/index.css'\nimport './style/night-sky.css'\nimport App from './App'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fab, fas, faTrash)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}