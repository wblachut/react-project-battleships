{"version":3,"sources":["Battleships.js","Player.js","components/Header.js","components/GameBoard.js","components/Game.js","App.js","index.js"],"names":["Ship","name","size","direction","ship","hitState","Array","fill","hit","nextHit","findIndex","field","isSunk","includes","GameBoard","playerSide","gameBoard","side","board","ships","shipCount","isReady","isGameOver","emptyBoard","makeBoard","getShips","starFighter","starFighter2","superStarFighter","superStarFighter2","starDestroyer","superStarDestroyer","shipArray","push","map","id","changeShipDirection","receiveAttack","xCord","yCord","isLegalMove","Number","isInteger","parseInt","shipId","attackedShip","console","log","markShipArea","checkGameOver","checkPlacement","isLegalPlace","j","Y","i","X","placeShip","forEach","cell","onBoard","coordinates","mark","placeShipsAtRandom","reversedShips","reverse","randomlyPlaceShip","randX","Math","ceil","random","randY","Player","type","player","isWinner","isMakingMove","makeMove","opponent","makeAIMove","legal","passMove","hasWon","CreatePlayer","boardLightSide","Board","boardDarkSide","Header","className","href","icon","props","PlayerBoard","setPlayerBoard","OpponentBoard","setOpponentBoard","onAIMove","table","arr","toString","element","data-cord","src","alt","onClick","e","y","target","dataset","cord","split","x","onMakeMove","React","memo","Game","PlayerOne","PlayerOneBoard","setP1Board","PlayerTwo","PlayerTwoBoard","setP2Board","App","useState","clear","library","add","fab","fas","faTrash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4239fac0.chunk.js","sourcesContent":["// Spaceships:\r\n// star fighters: (TIE-fighter, x-wing, y-wing)\r\n// (shuttle, star-fighter, bomber, destroyer, magister-destroyer)\r\n// https://starwars.fandom.com/wiki/Starfighter/Legends\r\n//\r\n// ships images visible on sides of boardgames\r\n// ship damaged => ember gif on the ship image\r\n// ship destroyed => red opacity\r\n// lose/win => different icon appearing\r\n// Battleship.Proto\r\n\r\nexport const Ship = (name, size, direction = 'horizontal') => {\r\n\tconst ship = {\r\n\t\tname,\r\n\t\tsize,\r\n\t\tdirection,\r\n\t\thitState: Array(size).fill('o'),\r\n\t\thit: () => {\r\n\t\t\tlet nextHit = ship.hitState.findIndex((field) => field === 'o')\r\n\t\t\tship.hitState[nextHit] = 'hit'\r\n\t\t},\r\n\t\tisSunk: () => !ship.hitState.includes('o'),\r\n\t}\r\n\treturn ship\r\n}\r\n\r\nexport const GameBoard = (playerSide) => {\r\n\tconst gameBoard = {\r\n\t\tside: playerSide,\r\n\t\tboard: [],\r\n\t\tships: [],\r\n\t\tshipCount: 0,\r\n\t\tisReady: false,\r\n\t\tisGameOver: false,\r\n\r\n\t\temptyBoard: () => {\r\n\t\t\treturn [\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t]\r\n\t\t},\r\n\t\tmakeBoard: () => {\r\n\t\t\tgameBoard.board = gameBoard.emptyBoard()\r\n\t\t},\r\n\t\tgetShips: (playerSide) => {\r\n\t\t\tlet shipArray = []\r\n\t\t\tlet starFighter, starFighter2\r\n\t\t\tlet superStarFighter, superStarFighter2\r\n\t\t\tlet starDestroyer\r\n\t\t\tlet superStarDestroyer\r\n\t\t\tif (playerSide === 'dark') {\r\n\t\t\t\tstarFighter = Ship('TIE-fighter', 1)\r\n\t\t\t\tstarFighter2 = Ship('TIE-fighter', 1)\r\n\t\t\t\tsuperStarFighter = Ship('TIE-bomber', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('TIE-bomber', 2)\r\n\t\t\t\tstarDestroyer = Ship('Star Destroyer', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('Super Star Destroyer', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\tstarFighter = Ship('Shuttle', 1)\r\n\t\t\t\tstarFighter2 = Ship('Shuttle', 1)\r\n\t\t\t\tsuperStarFighter = Ship('X-wing', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('X-wing', 2)\r\n\t\t\t\tstarDestroyer = Ship('Rebel heavy ship', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('Rebel Super Ship', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tshipArray.map((ship, id) => (ship.id = id + 1))\r\n\t\t\tgameBoard.ships = shipArray\r\n\t\t\treturn shipArray\r\n\t\t},\r\n\t\tchangeShipDirection: (ship) => {\r\n\t\t\tship.direction === 'horizontal'\r\n\t\t\t\t? (ship.direction = 'vertical')\r\n\t\t\t\t: (ship.direction = 'horizontal')\r\n\t\t},\r\n\t\treceiveAttack: (xCord, yCord) => {\r\n\t\t\tlet isLegalMove = true\r\n\t\t\tif (\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] === '_' ||\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] === '*'\r\n\t\t\t) {\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '•'\r\n\t\t\t\t// if is a ship\r\n\t\t\t} else if (\r\n\t\t\t\tNumber.isInteger(parseInt(gameBoard.board[yCord - 1][xCord - 1]))\r\n\t\t\t) {\r\n\t\t\t\t// pass a hit to ship\r\n\t\t\t\tlet shipId = parseInt(gameBoard.board[yCord - 1][xCord - 1])\r\n\t\t\t\tlet attackedShip = gameBoard.ships[shipId - 1]\r\n\t\t\t\tattackedShip.hit()\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`hit a ship, field number: ${shipId}, attacked id: ${attackedShip.id}`\r\n\t\t\t\t)\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '※'\r\n\r\n\t\t\t\tif (attackedShip.isSunk()) {\r\n\t\t\t\t\tconsole.log(`${attackedShip.name} was destroyed`)\r\n\t\t\t\t\tgameBoard.markShipArea('•', attackedShip)\r\n\t\t\t\t\tgameBoard.shipCount--\r\n\t\t\t\t\tgameBoard.checkGameOver()\r\n\t\t\t\t\tif (gameBoard.isGameOver === true) {\r\n\t\t\t\t\t\tconsole.log('Game Over')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('NOT A LEGAL MOVE')\r\n\t\t\t\tisLegalMove = false\r\n\t\t\t}\r\n\t\t\tif (isLegalMove) {\r\n\t\t\t\t// && !isGameOver\r\n\t\t\t\tconsole.log('move was legal...')\r\n\t\t\t\t// pass a turn\r\n\t\t\t}\r\n\t\t\treturn isLegalMove\r\n\t\t},\r\n\r\n\t\tcheckPlacement: (ship, xCord, yCord) => {\r\n\t\t\t// X, Y - coords to be checked\r\n\t\t\tlet isLegalPlace = true\r\n\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\tif (ship.size + xCord - 1 > 10) isLegalPlace = false\r\n\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\tlet Y = yCord - 2 + j\r\n\t\t\t\t\tif (0 <= Y && Y <= 9) {\r\n\t\t\t\t\t\tfor (let i = 0; i < ship.size + 2; i++) {\r\n\t\t\t\t\t\t\tlet X = xCord - 2 + i\r\n\t\t\t\t\t\t\tif (0 <= X && X <= 9) {\r\n\t\t\t\t\t\t\t\tif (gameBoard.board[Y][X] !== '_') {\r\n\t\t\t\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\tif (ship.size + yCord - 1 > 10) isLegalPlace = false\r\n\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\tlet X = xCord - 2 + j\r\n\t\t\t\t\tif (0 <= X && X <= 9) {\r\n\t\t\t\t\t\tfor (let i = 0; i < ship.size + 2; i++) {\r\n\t\t\t\t\t\t\tlet Y = yCord - 2 + i\r\n\t\t\t\t\t\t\tif (0 <= Y && Y <= 9) {\r\n\t\t\t\t\t\t\t\tif (gameBoard.board[Y][X] !== '_') {\r\n\t\t\t\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tisLegalPlace ? console.log('legal place') : console.log('Illegal place!')\r\n\t\t\treturn isLegalPlace\r\n\t\t},\r\n\r\n\t\tplaceShip: (ship, xCord, yCord) => {\r\n\t\t\t// yCord - row cord (array)\r\n\t\t\t// xCord - column cord (array element)\r\n\t\t\tif (gameBoard.checkPlacement(ship, xCord, yCord)) {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + i] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 1] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tgameBoard.markShipArea('*', ship, xCord, yCord)\r\n\t\t\t\tship.onBoard = true\r\n\t\t\t\tship.coordinates = [xCord, yCord]\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${ship.name} was placed ${ship.direction} on ${ship.coordinates}`\r\n\t\t\t\t)\r\n\t\t\t\tgameBoard.shipCount++\r\n\t\t\t\tif (gameBoard.shipCount === 6) {\r\n\t\t\t\t\tgameBoard.isReady = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmarkShipArea: (\r\n\t\t\tmark,\r\n\t\t\tship,\r\n\t\t\txCord = ship.coordinates[0],\r\n\t\t\tyCord = ship.coordinates[1]\r\n\t\t) => {\r\n\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// vertical areas\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xCord + ship.size < 10) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 2] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord + ship.size < 10) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tplaceShipsAtRandom: () => {\r\n\t\t\tlet reversedShips = [...gameBoard.ships].reverse()\r\n\t\t\twhile (gameBoard.shipCount < 6) {\r\n\t\t\t\treversedShips.forEach((ship) => {\r\n\t\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trandomlyPlaceShip: (ship) => {\r\n\t\t\tif (ship.onBoard !== true) {\r\n\t\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\t\tif (Math.random() * 2 > 1) gameBoard.changeShipDirection(ship)\r\n\t\t\t\tgameBoard.placeShip(ship, randX, randY)\r\n\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckGameOver: () => {\r\n\t\t\tconsole.log('Game over? ', gameBoard.shipCount === 0)\r\n\t\t\tif (gameBoard.shipCount === 0) {\r\n\t\t\t\tgameBoard.isGameOver = true\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t},\r\n\t}\r\n\treturn gameBoard\r\n}\r\n","import { GameBoard as Board } from './Battleships'\r\n\r\nexport const Player = (name, side, type = 'human', gameBoard) => {\r\n\tconst player = {\r\n\t\tname,\r\n\t\tside,\r\n\t\ttype,\r\n\t\tgameBoard,\r\n\t\tisWinner: false,\r\n\t\tisMakingMove: false,\r\n\t\tmakeMove: (opponent, xCord, yCord) => {\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(xCord, yCord)\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(xCord, yCord)\r\n\t\t\t\t// player.passMove(opponent)\r\n\t\t\t\treturn true\r\n\t\t\t} else return false\r\n\t\t},\r\n\t\tmakeAIMove: (opponent) => {\r\n\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\tconsole.log(randX, randY, legal)\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\t\tconsole.log(opponent.gameBoard)\r\n\t\t\t\t// player.passMove(opponent)\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tplayer.makeAIMove(opponent)\r\n\t\t\t}\r\n\t\t},\r\n\t\tpassMove: (opponent) => {\r\n\t\t\tplayer.isMakingMove = false\r\n\t\t\topponent.isMakingMove = true\r\n\t\t},\r\n\r\n\t\thasWon: (board) => {\r\n\t\t\t// opposite board\r\n\t\t\tboard.isGameOver === true\r\n\t\t\t\t? (player.isWinner = true)\r\n\t\t\t\t: (player.isWinner = false)\r\n\t\t},\r\n\t}\r\n\treturn player\r\n}\r\n\r\nexport const CreatePlayer = (side, type) => {\r\n\tif (side === 'light') {\r\n\t\tlet boardLightSide = Board('light side')\r\n\t\tboardLightSide.makeBoard()\r\n\t\tboardLightSide.getShips()\r\n\t\tboardLightSide.placeShipsAtRandom()\r\n\t\treturn Player('Jedi Master', side, type, boardLightSide)\r\n\t}\r\n\tif (side === 'dark') {\r\n\t\tlet boardDarkSide = Board('dark side')\r\n\t\tboardDarkSide.makeBoard()\r\n\t\tboardDarkSide.getShips('dark')\r\n\t\tboardDarkSide.placeShipsAtRandom()\r\n\t\treturn Player('Lord Sith', side, type, boardDarkSide)\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<div className='header-row'>\r\n\t\t\t\t<h1 className='col-sm-8'>\r\n\t\t\t\t\t<span className='title1'>SpaceShips </span>{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='https://github.com/wblachut/react-project-battleships'\r\n\t\t\t\t\tclassName='gh-btn'\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className='gh-icon' />\r\n\t\t\t\t</a>\r\n\t\t\t\t<i className='fab fa-github'></i>\r\n\t\t\t</div>\r\n\t\t\t<nav></nav>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GameBoard = (props) => {\r\n\tconst {\r\n\t\tplayer,\r\n\t\tPlayerBoard,\r\n\t\tsetPlayerBoard,\r\n\t\topponent,\r\n\t\tOpponentBoard,\r\n\t\tsetOpponentBoard,\r\n\t} = props\r\n\t// add outer side column with ships - on destroy add fire gif\r\n\t// use different cursor eg. aim (find info on net) ?\r\n\r\n\tconst onMakeMove = (e) => {\r\n\t\tconst y = e.target.dataset.cord.split(',')[0]\r\n\t\tconst x = e.target.dataset.cord.split(',')[1]\r\n\t\t// console.log(x, y)\r\n\t\topponent.makeMove(player, x, y)\r\n\t\t// console.table(player.gameBoard.board)\r\n\t\tsetPlayerBoard(player.gameBoard.board)\r\n\t\tconsole.table(PlayerBoard)\r\n\t\tonAIMove()\r\n\t}\r\n\r\n\tconst onAIMove = () => {\r\n\t\tplayer.makeAIMove(opponent)\r\n\t\tsetOpponentBoard(opponent.gameBoard.board)\r\n\t\tconsole.table(OpponentBoard)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`${player.side} gameBoard`}>\r\n\t\t\t<div className={`${player.side} side-title`}>The {player.side} side</div>\r\n\t\t\t<div className='board-wrapper'>\r\n\t\t\t\t<div className='column-description'>\r\n\t\t\t\t\t{PlayerBoard.map((arr, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='numbers' key={[i + 1]}>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{[i + 1]}{' '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='inner-wrapper'>\r\n\t\t\t\t\t<div className={`${player.side} row-description`}>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{PlayerBoard.map((arr, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className='letters' key={`letter${i}`}>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t{(i + 10).toString(36)}{' '}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* grid */}\r\n\t\t\t\t\t<div className={`${player.side} grid-wrapper`}>\r\n\t\t\t\t\t\t{PlayerBoard.map((arr, j) =>\r\n\t\t\t\t\t\t\tarr.map((element, i) => {\r\n\t\t\t\t\t\t\t\tif (player.type === 'human') {\r\n\t\t\t\t\t\t\t\t\tif (element === '_' || element === '*') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cell'\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else if (Number.isInteger(parseInt(element))) {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell ship ship${element}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell hit ship`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src='./images/flame.gif' alt='aj' />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell empty`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// ai board\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (element === '•') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cell empty'\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t•{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cell hit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src='./images/flame.gif' alt='a' />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cell'\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => onMakeMove(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default React.memo(GameBoard)\r\n\r\nGameBoard.propTypes = {\r\n\tplayer: PropTypes.object,\r\n\tPlayerBoard: PropTypes.array,\r\n\tsetPlayerBoard: PropTypes.func,\r\n\topponent: PropTypes.object,\r\n\tOpponentBoard: PropTypes.array,\r\n\tsetOpponentBoard: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../style/Game.css'\r\nimport GameBoard from './GameBoard'\r\n\r\nconst Game = (props) => {\r\n\treturn (\r\n\t\t<div className='game'>\r\n\t\t\t<GameBoard\r\n\t\t\t\tplayer={props.PlayerOne}\r\n\t\t\t\tPlayerBoard={props.PlayerOneBoard}\r\n\t\t\t\tsetPlayerBoard={props.setP1Board}\r\n\t\t\t\topponent={props.PlayerTwo}\r\n\t\t\t\tOpponentBoard={props.PlayerTwoBoard}\r\n\t\t\t\tsetOpponentBoard={props.setP2Board}\r\n\t\t\t/>\r\n\t\t\t<GameBoard\r\n\t\t\t\tplayer={props.PlayerTwo}\r\n\t\t\t\topponent={props.PlayerOne}\r\n\t\t\t\tOpponentBoard={props.PlayerOneBoard}\r\n\t\t\t\tsetOpponentBoard={props.setP1Board}\r\n\t\t\t\tPlayerBoard={props.PlayerTwoBoard}\r\n\t\t\t\tsetPlayerBoard={props.setP2Board}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Game\r\n\r\nGame.propTypes = {\r\n\tplayer: PropTypes.object,\r\n\tPlayerBoard: PropTypes.array,\r\n\tsetPlayerBoard: PropTypes.func,\r\n\topponent: PropTypes.object,\r\n\tOpponentBoard: PropTypes.array,\r\n\tsetOpponentBoard: PropTypes.func,\r\n\tPlayerOne: PropTypes.object,\r\n\tPlayerTwo: PropTypes.object,\r\n\tPlayerOneBoard: PropTypes.array,\r\n\tsetP1Board: PropTypes.func,\r\n\tPlayerTwoBoard: PropTypes.array,\r\n\tsetP2Board: PropTypes.func,\r\n}\r\n","import React, { useState } from 'react'\nimport { CreatePlayer } from './Player'\n\nimport Header from './components/Header'\n// import Intro from \"./components/Intro\";\n// import NewGame from \"./components/NewGame\";\nimport Game from './components/Game'\nimport './style/App.css'\n\nconst App = () => {\n\tlet PlayerOne = CreatePlayer('light', 'human')\n\tlet PlayerTwo = CreatePlayer('dark', 'computer')\n\tconst [PlayerOneBoard, setP1Board] = useState(PlayerOne.gameBoard.board)\n\tconst [PlayerTwoBoard, setP2Board] = useState(PlayerTwo.gameBoard.board)\n\tconsole.clear()\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t{/* <Intro /> */}\n\t\t\t{/* <NewGame /> */}\n\t\t\t<Game\n\t\t\t\tPlayerOne={PlayerOne}\n\t\t\t\tPlayerTwo={PlayerTwo}\n\t\t\t\tPlayerOneBoard={PlayerOneBoard}\n\t\t\t\tPlayerTwoBoard={PlayerTwoBoard}\n\t\t\t\tsetP1Board={setP1Board}\n\t\t\t\tsetP2Board={setP2Board}\n\t\t\t/>\n\t\t\t<div className='stars'></div>\n\t\t\t<div className='twinkling'></div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style/index.css'\nimport './style/night-sky.css'\nimport App from './App'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fab, fas, faTrash)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}