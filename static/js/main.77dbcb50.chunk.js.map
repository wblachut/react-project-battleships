{"version":3,"sources":["Battleships.js","Player.js","components/Header.js","components/Intro.js","components/NewGame.js","components/GameBoard.js","components/Game.js","components/Announcer.js","App.js","index.js"],"names":["Ship","name","size","direction","ship","hitState","Array","fill","hit","nextHit","findIndex","field","isSunk","includes","CreatePlayer","side","type","gameBoard","playerSide","board","ships","shipCount","isReady","isGameOver","emptyBoard","makeBoard","getShips","starFighter","starFighter2","superStarFighter","superStarFighter2","starDestroyer","superStarDestroyer","shipArray","push","map","id","changeShipDirection","receiveAttack","xCord","yCord","isLegalMove","val","console","log","Number","isInteger","parseInt","attackedShip","markShipArea","checkGameOver","info","checkPlacement","parseFloat","isLegalPlace","i","placeShip","forEach","cell","onBoard","coordinates","mark","placeShipsAtRandom","reversedShips","reverse","randomlyPlaceShip","randX","Math","ceil","random","randY","Board","player","isWinner","isMakingMove","makeMove","opponent","makeAIMove","legal","passMove","Player","Header","className","href","icon","Intro","setIntro","useEffect","setTimeout","onClick","NewGame","setGame","GameBoard","props","isGameReady","arr","toString","j","element","data-cord","onDragOver","e","preventDefault","onDragEnter","target","classList","add","onDragLeave","remove","onDrop","onPlaceShip","src","process","alt","onMakeMove","onPlaceRandomly","onResetBoard","onFlipShips","data-ship","draggable","onDragStart","dataTransfer","setData","dataset","onStartGame","React","memo","Game","useState","setGameReady","setBoard","opponentBoard","setOpponentBoard","EnemyShipCount","setEnemyShipCount","warn","winner","handlePlayerShipDisplay","handleComputerShipDisplay","onAIMove","table","onEndGame","setWinner","mountShip","owner","cords","startingCell","document","querySelector","shipImg","createElement","targetAble","appendChild","y","cord","split","x","shipID","getData","Announcer","App","isIntro","isGame","PlayerOne","PlayerTwo","clear","library","fab","fas","faTrash","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77dbcb50.chunk.js","sourcesContent":["// https://starwars.fandom.com/wiki/Starfighter/Legends\r\n\r\nexport const Ship = (name, size, direction = 'horizontal') => {\r\n\tconst ship = {\r\n\t\tname,\r\n\t\tsize,\r\n\t\tdirection,\r\n\t\thitState: Array(size).fill('o'),\r\n\t\thit: () => {\r\n\t\t\tlet nextHit = ship.hitState.findIndex((field) => field === 'o')\r\n\t\t\tship.hitState[nextHit] = 'hit'\r\n\t\t},\r\n\t\tisSunk: () => !ship.hitState.includes('o'),\r\n\t}\r\n\treturn ship\r\n}\r\n\r\nexport const GameBoard = (playerSide) => {\r\n\tconst gameBoard = {\r\n\t\tside: playerSide,\r\n\t\tboard: [],\r\n\t\tships: [],\r\n\t\tshipCount: 0,\r\n\t\tisReady: false,\r\n\t\tisGameOver: false,\r\n\r\n\t\temptyBoard: () => {\r\n\t\t\treturn [\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t]\r\n\t\t},\r\n\t\tmakeBoard: () => {\r\n\t\t\tgameBoard.board = gameBoard.emptyBoard()\r\n\t\t\tgameBoard.shipCount = 0\r\n\t\t\tgameBoard.isReady = false\r\n\t\t\tgameBoard.isGameOver = false\r\n\t\t},\r\n\t\tgetShips: (playerSide) => {\r\n\t\t\tlet shipArray = []\r\n\t\t\tlet starFighter, starFighter2\r\n\t\t\tlet superStarFighter, superStarFighter2\r\n\t\t\tlet starDestroyer\r\n\t\t\tlet superStarDestroyer\r\n\t\t\tif (playerSide === 'dark') {\r\n\t\t\t\tstarFighter = Ship('TIE-fighter', 1)\r\n\t\t\t\tstarFighter2 = Ship('TIE-fighter', 1)\r\n\t\t\t\tsuperStarFighter = Ship('TIE-bomber', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('TIE-bomber', 2)\r\n\t\t\t\tstarDestroyer = Ship('Star Destroyer', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('Super Star Destroyer', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\tstarFighter = Ship('Shuttle', 1)\r\n\t\t\t\tstarFighter2 = Ship('Shuttle', 1)\r\n\t\t\t\tsuperStarFighter = Ship('X-wing starfighter', 2)\r\n\t\t\t\tsuperStarFighter2 = Ship('X-wing starfighter', 2)\r\n\t\t\t\tstarDestroyer = Ship('CR90 corvette', 3)\r\n\t\t\t\tsuperStarDestroyer = Ship('MC80 Star Cruiser', 4)\r\n\t\t\t\tshipArray.push(\r\n\t\t\t\t\tstarFighter,\r\n\t\t\t\t\tstarFighter2,\r\n\t\t\t\t\tsuperStarFighter,\r\n\t\t\t\t\tsuperStarFighter2,\r\n\t\t\t\t\tstarDestroyer,\r\n\t\t\t\t\tsuperStarDestroyer\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tshipArray.map((ship, id) => (ship.id = id + 1))\r\n\t\t\tgameBoard.ships = shipArray\r\n\t\t\treturn shipArray\r\n\t\t},\r\n\t\tchangeShipDirection: (ship) => {\r\n\t\t\tship.direction === 'horizontal' && ship.size > 1\r\n\t\t\t\t? (ship.direction = 'vertical')\r\n\t\t\t\t: (ship.direction = 'horizontal')\r\n\t\t},\r\n\t\treceiveAttack: (xCord, yCord) => {\r\n\t\t\tlet isLegalMove = true\r\n\t\t\tconst val = gameBoard.board[yCord - 1][xCord - 1]\r\n\t\t\tif (val === '_' || val === '*') {\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '•'\r\n\t\t\t\tconsole.log('miss !!')\r\n\t\t\t} else if (Number.isInteger(parseInt(val))) {\r\n\t\t\t\tlet attackedShip = gameBoard.ships[parseInt(val) - 1]\r\n\t\t\t\tattackedShip.hit()\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`hit a ship! field number: ${parseInt(val)}, attacked id: ${\r\n\t\t\t\t\t\tattackedShip.id\r\n\t\t\t\t\t}`\r\n\t\t\t\t)\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '※'\r\n\r\n\t\t\t\tif (attackedShip.isSunk()) {\r\n\t\t\t\t\tconsole.log(`${attackedShip.name} was destroyed`)\r\n\t\t\t\t\tgameBoard.markShipArea('•', attackedShip)\r\n\t\t\t\t\tgameBoard.shipCount--\r\n\t\t\t\t\tgameBoard.checkGameOver()\r\n\t\t\t\t\tif (gameBoard.isGameOver === true) console.info('Game Over')\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisLegalMove = false\r\n\t\t\t}\r\n\t\t\treturn isLegalMove\r\n\t\t},\r\n\r\n\t\tcheckPlacement: (ship, xCord, yCord) => {\r\n\t\t\txCord = parseFloat(xCord)\r\n\t\t\tyCord = parseFloat(yCord)\r\n\t\t\tlet isLegalPlace = true\r\n\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\tif (ship.size + xCord - 1 > 10) {\r\n\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\t\t\tif (gameBoard.board[yCord - 1][xCord - 1 + i] !== '_') {\r\n\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\tif (ship.size + yCord - 1 > 10) {\r\n\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\t\t\tif (gameBoard.board[yCord - 1 + i][xCord - 1] !== '_') {\r\n\t\t\t\t\t\tisLegalPlace = false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tisLegalPlace ? console.log('legal place') : console.log('Illegal place!')\r\n\t\t\treturn isLegalPlace\r\n\t\t},\r\n\r\n\t\tplaceShip: (ship, xCord, yCord) => {\r\n\t\t\tif (\r\n\t\t\t\tgameBoard.shipCount < 6 &&\r\n\t\t\t\tgameBoard.checkPlacement(ship, xCord, yCord)\r\n\t\t\t) {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + i] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 1] = `${ship.id}`\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tgameBoard.markShipArea('*', ship, xCord, yCord)\r\n\t\t\t\tship.onBoard = true\r\n\t\t\t\tship.coordinates = [parseFloat(xCord), parseFloat(yCord)]\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${ship.name} was placed ${ship.direction} on ${ship.coordinates}`\r\n\t\t\t\t)\r\n\t\t\t\tconsole.log(ship.coordinates)\r\n\t\t\t\tgameBoard.shipCount++\r\n\t\t\t\tif (gameBoard.shipCount === 6) {\r\n\t\t\t\t\tgameBoard.isReady = true\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmarkShipArea: (\r\n\t\t\tmark,\r\n\t\t\tship,\r\n\t\t\txCord = ship.coordinates[0],\r\n\t\t\tyCord = ship.coordinates[1]\r\n\t\t) => {\r\n\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + i] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// vertical areas\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xCord - 1 + ship.size < 10) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + ship.size] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 2] = `${mark}`\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord - 1 + ship.size < 10) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 2] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 1] = `${mark}`\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord] = `${mark}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tplaceShipsAtRandom: () => {\r\n\t\t\tlet reversedShips = [...gameBoard.ships].reverse()\r\n\t\t\twhile (gameBoard.shipCount < 6) {\r\n\t\t\t\treversedShips.forEach((ship) => {\r\n\t\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trandomlyPlaceShip: (ship) => {\r\n\t\t\tif (ship.onBoard !== true) {\r\n\t\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\t\tif (Math.random() * 2 > 1) gameBoard.changeShipDirection(ship)\r\n\t\t\t\tgameBoard.placeShip(ship, randX, randY)\r\n\t\t\t\tgameBoard.randomlyPlaceShip(ship)\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckGameOver: () => {\r\n\t\t\t// console.log('Game over? ', gameBoard.shipCount === 0)\r\n\t\t\tif (gameBoard.shipCount === 0) {\r\n\t\t\t\tgameBoard.isGameOver = true\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t},\r\n\t}\r\n\treturn gameBoard\r\n}\r\n","import { GameBoard as Board } from './Battleships'\r\n\r\nexport const Player = (name, side, type = 'human', gameBoard) => {\r\n\tconst player = {\r\n\t\tname,\r\n\t\tside,\r\n\t\ttype,\r\n\t\tgameBoard,\r\n\t\tisWinner: false,\r\n\t\tisMakingMove: false,\r\n\t\tmakeMove: (opponent, xCord, yCord) => {\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(xCord, yCord)\r\n\t\t\tif (legal) {\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('NOT A LEGAL MOVE')\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tmakeAIMove: (opponent) => {\r\n\t\t\tlet randX = Math.ceil(Math.random() * 10)\r\n\t\t\tlet randY = Math.ceil(Math.random() * 10)\r\n\t\t\tlet legal = opponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\tconsole.log('AI Move:', randX, randY, 'was legal?', legal)\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(randX, randY)\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tplayer.makeAIMove(opponent)\r\n\t\t\t}\r\n\t\t},\r\n\t\t// not used so far\r\n\t\tpassMove: (opponent) => {\r\n\t\t\tplayer.isMakingMove = false\r\n\t\t\topponent.isMakingMove = true\r\n\t\t},\r\n\t}\r\n\treturn player\r\n}\r\n\r\nexport const CreatePlayer = (side, type) => {\r\n\tlet gameBoard = Board(`${side}`)\r\n\tgameBoard.makeBoard()\r\n\tgameBoard.getShips(`${side}`)\r\n\tif (type === 'computer') {\r\n\t\tgameBoard.placeShipsAtRandom()\r\n\t}\r\n\tlet name\r\n\tif (side === 'dark') {\r\n\t\tname = 'Lord Sith'\r\n\t} else {\r\n\t\tname = 'Jedi Master'\r\n\t}\r\n\treturn Player(name, side, type, gameBoard)\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header-row\">\r\n\t\t\t\t<h1 className=\"col-sm-8\">\r\n\t\t\t\t\t<span className=\"title1\">SpaceShips </span>{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://github.com/wblachut/react-project-battleships\"\r\n\t\t\t\t\tclassName=\"gh-btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"gh-icon\" />\r\n\t\t\t\t</a>\r\n\t\t\t\t<i className=\"fab fa-github\"></i>\r\n\t\t\t</div>\r\n\t\t\t<nav></nav>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport '../style/Intro.css'\r\n\r\nconst Intro = ({ setIntro }) => {\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetIntro(false)\r\n\t\t}, 20000)\r\n\t}, [])\r\n\r\n\tconst onSkipIntro = () => {\r\n\t\tsetIntro(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"fade\">\r\n\t\t\t<section className=\"star-wars-intro\" onClick={onSkipIntro}>\r\n\t\t\t\t<div className=\"crawl\">\r\n\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t<p>Episode XII</p>\r\n\t\t\t\t\t\t<h1>The Spaceships</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tIt is a browser battleships game styled on the Star Wars movie by\r\n\t\t\t\t\t\tGeorge Lucas. This project was realized on learning purpose for The\r\n\t\t\t\t\t\tOdin Project curriculum. Main aim of the project is to build game\r\n\t\t\t\t\t\tlogic using TDD. I hope you enjoy it\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">Confront the sith lord...</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">May the force be with you jedi master!</p>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Intro\r\n\r\nIntro.propTypes = {\r\n\tsetIntro: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../style/Intro.css'\r\n\r\nconst NewGame = ({ setGame }) => {\r\n\t// place in App ?\r\n\tconst onStartGame = () => {\r\n\t\tconsole.log('start game clicked')\r\n\t\tsetGame(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"new-game\">\r\n\t\t\t\t<div className=\"new-game-wrapper\"></div>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"new-game-btn star-btn\" onClick={onStartGame}>\r\n\t\t\t\tContend the Empire\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NewGame\r\n\r\nNewGame.propTypes = {\r\n\tsetGame: PropTypes.func,\r\n}\r\n","/* eslint-disable no-undef */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n//maybe problem is caused because of 2 game boards, check if they are special ?\r\n\r\nconst GameBoard = (props) => {\r\n\tconst { player, board, isGameReady } = props\r\n\t// add outer side column with ships - on destroy add fire gif\r\n\t// use different cursor eg. aim (find info on net) ?\r\n\t// console.log(isGameReady)\r\n\treturn (\r\n\t\t<div className={`${player.side} gameBoard`}>\r\n\t\t\t<div className={`${player.side} side-title`}>The {player.side} side</div>\r\n\r\n\t\t\t<div className=\"outer-wrapper\">\r\n\t\t\t\t{/* {BOARD} */}\r\n\t\t\t\t<div className=\"board-wrapper\">\r\n\t\t\t\t\t<div className=\"column-description\">\r\n\t\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className=\"numbers\" key={[i + 1]}>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t{[i + 1]}{' '}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"inner-wrapper\">\r\n\t\t\t\t\t\t<div className={`${player.side} row-description`}>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className=\"letters\" key={`letter${i}`}>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t{(i + 10).toString(36)}{' '}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* grid */}\r\n\t\t\t\t\t\t<div className={`${player.side} grid-wrapper ${player.type}`}>\r\n\t\t\t\t\t\t\t{player.gameBoard.board.map((arr, j) =>\r\n\t\t\t\t\t\t\t\tarr.map((element, i) => {\r\n\t\t\t\t\t\t\t\t\tif (player.type === 'human') {\r\n\t\t\t\t\t\t\t\t\t\tif (element === '_' || element === '*') {\r\n\t\t\t\t\t\t\t\t\t\t\tif (element === '_' && !isGameReady) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell droppable\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragOver={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragEnter={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.classList.add('hover')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragLeave={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.classList.remove('hover')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDrop={(e) => props.onPlaceShip(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else if (Number.isInteger(parseInt(element))) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet ship = player.gameBoard.ships[element - 1]\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell ship ship${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{parseFloat(ship.coordinates[0]) === i + 1 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparseFloat(ship.coordinates[1]) === j + 1 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-img-grid ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell hit ship`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"flames\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell empty`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// AI board\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (element === '•') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell hit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"as\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => props.onMakeMove(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isGameReady && (\r\n\t\t\t\t\t<div className=\"ship-wrapper\">\r\n\t\t\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onPlaceRandomly}>\r\n\t\t\t\t\t\t\t\tPlace randomly\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onResetBoard}>\r\n\t\t\t\t\t\t\t\tReset Board\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onFlipShips}>\r\n\t\t\t\t\t\t\t\tFlip Ships\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{player.gameBoard.ships.map((ship) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t!ship.onBoard && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"ship-view\" key={`ship${ship.id}`}>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-img ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-ship={ship.id}\r\n\t\t\t\t\t\t\t\t\t\t\tdraggable\r\n\t\t\t\t\t\t\t\t\t\t\tonDragStart={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\te.dataTransfer.setData('ship', e.target.dataset.ship)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{!isGameReady && (\r\n\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"start-game-btn star-btn\"\r\n\t\t\t\t\t\tonClick={props.onStartGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default React.memo(GameBoard)\r\n\r\nGameBoard.propTypes = {\r\n\tisGameReady: PropTypes.bool,\r\n\tplayer: PropTypes.object,\r\n\tboard: PropTypes.array,\r\n\tonMakeMove: PropTypes.func,\r\n\tonPlaceShip: PropTypes.func,\r\n\tonFlipShips: PropTypes.func,\r\n\tonPlaceRandomly: PropTypes.func,\r\n\tonResetBoard: PropTypes.func,\r\n\tonStartGame: PropTypes.func,\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../style/Game.css'\r\nimport GameBoard from './GameBoard'\r\n\r\nconst Game = (props) => {\r\n\tconst { player, opponent } = props\r\n\tconst [isGameReady, setGameReady] = useState(false)\r\n\tconst [board, setBoard] = useState([...player.gameBoard.board])\r\n\tconst [opponentBoard, setOpponentBoard] = useState([\r\n\t\t...opponent.gameBoard.board,\r\n\t])\r\n\tconst [EnemyShipCount, setEnemyShipCount] = useState(\r\n\t\topponent.gameBoard.shipCount\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.warn('GAME HAS A WINNER')\r\n\t}, [props.winner])\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePlayerShipDisplay()\r\n\t}, [board])\r\n\r\n\tuseEffect(() => {\r\n\t\thandleComputerShipDisplay()\r\n\t\tconsole.log('use Effect:', EnemyShipCount)\r\n\t}, [EnemyShipCount])\r\n\r\n\tconst onPlaceRandomly = () => {\r\n\t\tonResetBoard()\r\n\t\tplayer.gameBoard.placeShipsAtRandom()\r\n\t\tsetBoard([...player.gameBoard.board])\r\n\t}\r\n\r\n\tconst onFlipShips = () => {\r\n\t\tplayer.gameBoard.ships.map((ship) => {\r\n\t\t\tif (!ship.onBoard) player.gameBoard.changeShipDirection(ship)\r\n\t\t})\r\n\t\tsetBoard([...player.gameBoard.board])\r\n\t}\r\n\r\n\tconst onResetBoard = () => {\r\n\t\tplayer.gameBoard.makeBoard()\r\n\t\tplayer.gameBoard.getShips()\r\n\t\tsetBoard([...player.gameBoard.board])\r\n\t}\r\n\r\n\tconst onPlaceShip = (e) => {\r\n\t\tconst y = e.target.dataset.cord.split(',')[0]\r\n\t\tconst x = e.target.dataset.cord.split(',')[1]\r\n\t\tconst shipID = e.dataTransfer.getData('ship')\r\n\t\tconst ship = player.gameBoard.ships[shipID - 1]\r\n\t\tconsole.log('Placing:', ship.name, x, y)\r\n\t\tplayer.gameBoard.placeShip(ship, x, y)\r\n\t\tconsole.table(board)\r\n\t\tsetBoard([...player.gameBoard.board])\r\n\t}\r\n\r\n\tconst onStartGame = () => {\r\n\t\tif (player.gameBoard.isReady) setGameReady(true)\r\n\t}\r\n\r\n\tconst onMakeMove = (e) => {\r\n\t\tconsole.log('Your move:')\r\n\t\tconst y = e.target.dataset.cord.split(',')[0]\r\n\t\tconst x = e.target.dataset.cord.split(',')[1]\r\n\t\tif (player.makeMove(opponent, x, y) === true) {\r\n\t\t\tsetOpponentBoard([...opponent.gameBoard.board])\r\n\t\t\tsetEnemyShipCount(opponent.gameBoard.shipCount)\r\n\t\t\tconsole.table(opponentBoard)\r\n\t\t\tconsole.log(opponentBoard)\r\n\t\t\tif (opponent.gameBoard.isGameOver) {\r\n\t\t\t\tonEndGame(player)\r\n\t\t\t}\r\n\t\t\tonAIMove()\r\n\t\t}\r\n\t}\r\n\r\n\tconst onAIMove = () => {\r\n\t\tconsole.log('Computer move:')\r\n\t\topponent.makeAIMove(player)\r\n\t\tsetBoard([...player.gameBoard.board])\r\n\t\tconsole.table(board)\r\n\t\tif (player.gameBoard.isGameOver) {\r\n\t\t\tonEndGame(opponent)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onEndGame = (winner) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tprops.setWinner(winner)\r\n\t\t}, 2000)\r\n\t}\r\n\r\n\tconst handlePlayerShipDisplay = () => {\r\n\t\tplayer.gameBoard.ships.map((ship) => {\r\n\t\t\tmountShip(player, ship)\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleComputerShipDisplay = () => {\r\n\t\topponent.gameBoard.ships.map((ship) => {\r\n\t\t\tif (ship.isSunk() === true) {\r\n\t\t\t\tmountShip(opponent, ship)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst mountShip = (owner, ship) => {\r\n\t\tif (ship.onBoard) {\r\n\t\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]]\r\n\t\t\tconst boardDiv = document.querySelector(`.${owner.side}`)\r\n\t\t\tconst startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`)\r\n\t\t\tif (!startingCell.querySelector('.ship-img-grid')) {\r\n\t\t\t\tconst shipImg = document.createElement('img')\r\n\t\t\t\tshipImg.src =\r\n\t\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\t\tprocess.env.PUBLIC_URL + `/images/${owner.side}${ship.id}.png`\r\n\t\t\t\tshipImg.alt = `ship-${owner.side}${ship.id}`\r\n\t\t\t\tshipImg.classList.add(`ship-img-grid`)\r\n\t\t\t\tshipImg.classList.add(ship.direction)\r\n\t\t\t\tshipImg.targetAble = false\r\n\t\t\t\tstartingCell.appendChild(shipImg)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isGameReady ? (\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t<GameBoard player={player} board={board} isGameReady={isGameReady} />\r\n\t\t\t\t\t<GameBoard\r\n\t\t\t\t\t\tplayer={opponent}\r\n\t\t\t\t\t\tboard={opponentBoard}\r\n\t\t\t\t\t\tonMakeMove={onMakeMove}\r\n\t\t\t\t\t\tisGameReady={isGameReady}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t<GameBoard\r\n\t\t\t\t\t\tplayer={player}\r\n\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\tisGameReady={isGameReady}\r\n\t\t\t\t\t\tsetGameReady={setGameReady}\r\n\t\t\t\t\t\tonFlipShips={onFlipShips}\r\n\t\t\t\t\t\tonPlaceShip={onPlaceShip}\r\n\t\t\t\t\t\tonPlaceRandomly={onPlaceRandomly}\r\n\t\t\t\t\t\tonResetBoard={onResetBoard}\r\n\t\t\t\t\t\tonStartGame={onStartGame}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Game\r\n\r\nGame.propTypes = {\r\n\tplayer: PropTypes.object,\r\n\tboard: PropTypes.array,\r\n\tsetBoard: PropTypes.func,\r\n\topponent: PropTypes.object,\r\n\topponentBoard: PropTypes.array,\r\n\tsetOpponentBoard: PropTypes.func,\r\n\tPlayerOne: PropTypes.object,\r\n\tPlayerTwo: PropTypes.object,\r\n\tgameReady: PropTypes.bool,\r\n\tsetGameReady: PropTypes.func,\r\n\twinner: PropTypes.object,\r\n\tsetWinner: PropTypes.func,\r\n\tsetGame: PropTypes.func,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Announcer = ({ winner, setWinner, setGame }) => {\r\n\tuseEffect(() => {}, [])\r\n\tconst onPlayAgain = () => {\r\n\t\tsetGame(false)\r\n\t\tsetWinner(null)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"announcer-container\">\r\n\t\t\t<div className={`announcer ${winner.side}`}>\r\n\t\t\t\t<h1>{winner.name} has won!</h1>\r\n\t\t\t\t{winner.side === 'light' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tHrrmmm. A true leader you are. About your tactical prowess all\r\n\t\t\t\t\t\tgalaxies should know !\r\n\t\t\t\t\t\t<div className={`img-wrapper ${winner.side}`}></div>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t\t{winner.side === 'dark' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tYou don’t know the power of the dark side! I must obey my master...{' '}\r\n\t\t\t\t\t\t<div className={`img-wrapper ${winner.side}`}></div>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<button className=\"new-game-btn star-btn\" onClick={onPlayAgain}>\r\n\t\t\t\tPlay again!\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Announcer\r\n\r\nAnnouncer.propTypes = {\r\n\twinner: PropTypes.object,\r\n\tsetWinner: PropTypes.func,\r\n\tsetGame: PropTypes.func,\r\n}\r\n","// eslint-disable-next-line no-unused-vars\nimport React, { useState } from 'react'\nimport { CreatePlayer } from './Player'\n\nimport Header from './components/Header'\nimport Intro from './components/Intro'\nimport NewGame from './components/NewGame'\nimport Game from './components/Game'\nimport Announcer from './components/Announcer'\nimport './style/App.css'\n\nconst App = () => {\n\tconst [isIntro, setIntro] = useState(true)\n\tconst [winner, setWinner] = useState(null)\n\tconst [isGame, setGame] = useState(false)\n\tlet PlayerOne = CreatePlayer('light', 'human')\n\tlet PlayerTwo = CreatePlayer('dark', 'computer')\n\tconsole.clear()\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t{isIntro && <Intro isIntro={isIntro} setIntro={setIntro} />}\n\t\t\t{!isIntro && !isGame && <NewGame setGame={setGame} />}\n\t\t\t{isGame && winner === null && (\n\t\t\t\t<Game\n\t\t\t\t\tplayer={PlayerOne}\n\t\t\t\t\topponent={PlayerTwo}\n\t\t\t\t\tsetWinner={setWinner}\n\t\t\t\t\twinner={winner}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{winner !== null && (\n\t\t\t\t<Announcer winner={winner} setWinner={setWinner} setGame={setGame} />\n\t\t\t)}\n\t\t\t<div className=\"stars\"></div>\n\t\t\t<div className=\"twinkling\"></div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style/index.css'\nimport './style/night-sky.css'\nimport App from './App'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fab, fas, faTrash)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}