{"version":3,"sources":["helperFunctions.js","Battleships.js","Player.js","components/Header.jsx","components/Intro.jsx","components/NewGame.jsx","components/GameBoard.jsx","components/Game.jsx","components/Announcer.jsx","App.js","index.js"],"names":["attackShip","gameBoard","xCord","yCord","attackedShip","ships","parseInt","board","hit","checkIfShipHasSunk","isSunk","markShipArea","shipCount","checkGameOver","isGameOver","console","log","makeRandomAIMove","opponent","randX","Math","ceil","random","randY","receiveAttack","BOARD_SIDE_SIZE","Ship","name","size","direction","ship","hitState","Array","fill","nextHit","findIndex","field","includes","CreatePlayer","side","type","isReady","emptyBoard","makeBoard","createShips","getShips","shipArray","map","id","changeShipDirection","val","Number","isInteger","checkPlacement","parseFloat","isLegalPlace","i","placeShip","forEach","cell","onBoard","coordinates","mark","placeShipsAtRandom","reversedShips","reverse","randomlyPlaceShip","Board","lastAIMove","nextAIMove","isWinner","isMakingMove","makeMove","makeAIMove","Player","Header","className","href","icon","Intro","setAppStatus","onClick","NewGame","setWinner","GameBoard","props","player","isGameReady","arr","toString","j","element","data-cord","onDragOver","e","preventDefault","onDragEnter","target","classList","add","onDragLeave","remove","onDrop","onPlaceShip","src","process","alt","onMakeMove","onPlaceRandomly","onResetBoard","onFlipShips","data-ship","draggable","onDragStart","dataTransfer","setData","dataset","onStartGame","defaultProps","Game","useState","setGameReady","setBoard","opponentBoard","setOpponentBoard","EnemyShipCount","setEnemyShipCount","useEffect","handlePlayerShipDisplay","handleComputerShipDisplay","onAIMove","onEndGame","winner","setTimeout","mountShip","owner","cords","startingCell","document","querySelector","shipImg","createElement","targetAble","appendChild","y","cord","split","x","toggle","shipID","getData","gameReady","Announcer","App","appStatus","PlayerOne","PlayerTwo","clear","timeout","CSSTransition","in","classNames","unmountOnExit","onExited","library","fab","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e56033b.chunk.js","sourcesContent":["const attackShip = (gameBoard, xCord, yCord) => {\r\n\tconst attackedShip =\r\n\t\tgameBoard.ships[parseInt(gameBoard.board[yCord - 1][xCord - 1]) - 1];\r\n\tattackedShip.hit();\r\n\tgameBoard.board[yCord - 1][xCord - 1] = '※';\r\n\tcheckIfShipHasSunk(attackedShip, gameBoard);\r\n};\r\n\r\nconst checkIfShipHasSunk = (attackedShip, gameBoard) => {\r\n\tif (attackedShip.isSunk()) {\r\n\t\tgameBoard.markShipArea('•', attackedShip);\r\n\t\tgameBoard.shipCount--;\r\n\t\tgameBoard.checkGameOver();\r\n\t\tif (gameBoard.isGameOver === true) console.log('GAME OVER!');\r\n\t}\r\n};\r\n\r\nconst checkDirectionalShipPlacement = (\r\n\tgameBoard,\r\n\tship,\r\n\txCord,\r\n\tyCord,\r\n\tboardSize\r\n) => {\r\n\txCord = parseFloat(xCord);\r\n\tyCord = parseFloat(yCord);\r\n\tif (ship.direction === 'horizontal') {\r\n\t\tif (ship.size + xCord - 1 > boardSize) return false;\r\n\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\tif (gameBoard.board[yCord - 1][xCord - 1 + i] !== '_') return false;\r\n\t\t}\r\n\t} else {\r\n\t\tif (ship.size + yCord - 1 > boardSize) return false;\r\n\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\tif (gameBoard.board[yCord - 1 + i][xCord - 1] !== '_') return false;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst makeRandomAIMove = (opponent) => {\r\n\tconst randX = Math.ceil(Math.random() * 10);\r\n\tconst randY = Math.ceil(Math.random() * 10);\r\n\tif (opponent.gameBoard.receiveAttack(randX, randY)) {\r\n\t\topponent.gameBoard.receiveAttack(randX, randY);\r\n\t\tif (opponent.gameBoard.board[(randX, randY)] === '※') return true;\r\n\t} else {\r\n\t\tmakeRandomAIMove(opponent);\r\n\t}\r\n};\r\n\r\nconst makeSmartAIMove = () => {\r\n\t// // console.log('Smart AI, ha ha !');\r\n\t// const lastX = player.lastAIMove[0];\r\n\t// const lastY = player.lastAIMove[1];\r\n\t// const lastMoveStatus = player.lastAIMove[2];\r\n\t// // console.log(lastX, lastY);\r\n\t// // const legal = opponent.gameBoard.receiveAttack(lastX, lastY);\r\n\t// // console.log(legal);\r\n\t// if (lastMoveStatus === '※') {\r\n\t// \tif (\r\n\t// \t\tplayer.nextAIMove === 'down' &&\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX - 1, lastY) === true\r\n\t// \t) {\r\n\t// \t\tconsole.log('was a hit moving down');\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX - 1, lastY);\r\n\t// \t\treturn;\r\n\t// \t} else if (\r\n\t// \t\tplayer.nextAIMove === 'up' &&\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX + 1, lastY) === true\r\n\t// \t) {\r\n\t// \t\tconsole.log('was a hit moving up');\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX + 1, lastY);\r\n\t// \t} else if (\r\n\t// \t\tplayer.nextAIMove === 'left' &&\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX, lastY - 1) === true\r\n\t// \t) {\r\n\t// \t\tconsole.log('was a hit moving left');\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX, lastY - 1);\r\n\t// \t} else if (\r\n\t// \t\tplayer.nextAIMove === 'right' &&\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX, lastY + 1) === true\r\n\t// \t) {\r\n\t// \t\tconsole.log('was a hit moving right');\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX, lastY + 1);\r\n\t// \t} else {\r\n\t// \t\treturn;\r\n\t// \t}\r\n\t// } else if (lastMoveStatus === '•') {\r\n\t// \tif (\r\n\t// \t\tplayer.nextAIMove === 'down' &&\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX + 1, lastY) === true\r\n\t// \t) {\r\n\t// \t\tplayer.nextAIMove = 'up';\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX + 1, lastY);\r\n\t// \t} else if (\r\n\t// \t\tplayer.nextAIMove === 'up' &&\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX, lastY - 1) === true\r\n\t// \t) {\r\n\t// \t\tplayer.nextAIMove = 'left';\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX - 1, lastY);\r\n\t// \t} else if (\r\n\t// \t\tplayer.nextAIMove === 'left' &&\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX, lastY - 1) === true\r\n\t// \t) {\r\n\t// \t\tplayer.nextAIMove = 'right';\r\n\t// \t\topponent.gameBoard.receiveAttack(lastX - 1, lastY);\r\n\t// \t} else if (player.nextAIMove === 'right') {\r\n\t// \t\tplayer.nextAIMove = '';\r\n\t// \t\tplayer.makeAIMove();\r\n\t// \t}\r\n\t// }\r\n\t// move down\r\n\t// check moving down, if true move down, else check moving up -> move up\r\n\t// if hit move up is miss\r\n\t// if miss move left\r\n\t// if miss move right\r\n\t// if is miss return\r\n\t// if (legal) {\r\n\t// \topponent.gameBoard.receiveAttack(randX, randY);\r\n\t// \tplayer.lastAIMove = [randX, randY, gameBoard.board[(randX, randY)]];\r\n\t// \tif (\r\n\t// \t\topponent.gameBoard.board[(randX, randY)] === '※' &&\r\n\t// \t\tplayer.nextAIMove === ''\r\n\t// \t)\r\n\t// \t\tplayer.nextAIMove = 'down';\r\n\t// \treturn true;\r\n\t// } else {\r\n\t// \tplayer.makeAIMove(opponent);\r\n\t// }\r\n};\r\n\r\nexport {\r\n\tattackShip,\r\n\tcheckDirectionalShipPlacement,\r\n\tmakeSmartAIMove,\r\n\tmakeRandomAIMove,\r\n};\r\n","import { attackShip } from './helperFunctions';\r\n\r\nconst BOARD_SIDE_SIZE = 10;\r\nconst FLEET_QUANTITY = 6;\r\n\r\nexport const Ship = (name = 'ship', size = 1, direction = 'horizontal') => {\r\n\tconst ship = {\r\n\t\tname,\r\n\t\tsize,\r\n\t\tdirection,\r\n\t\thitState: Array(size).fill('o'),\r\n\t\thit: () => {\r\n\t\t\tconst nextHit = ship.hitState.findIndex((field) => field === 'o');\r\n\t\t\tship.hitState[nextHit] = 'hit';\r\n\t\t},\r\n\t\tisSunk: () => !ship.hitState.includes('o'),\r\n\t};\r\n\treturn ship;\r\n};\r\n\r\nexport const GameBoard = (playerSide = 'light') => {\r\n\tconst gameBoard = {\r\n\t\tside: playerSide,\r\n\t\tboard: [],\r\n\t\tships: [],\r\n\t\tshipCount: 0,\r\n\t\tisReady: false,\r\n\t\tisGameOver: false,\r\n\r\n\t\temptyBoard: () => {\r\n\t\t\treturn [\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t];\r\n\t\t},\r\n\t\tmakeBoard: () => {\r\n\t\t\tgameBoard.board = gameBoard.emptyBoard();\r\n\t\t\tgameBoard.shipCount = 0;\r\n\t\t\tgameBoard.isReady = false;\r\n\t\t\tgameBoard.isGameOver = false;\r\n\t\t},\r\n\r\n\t\tcreateShips: (playerSide = 'light') => {\r\n\t\t\tif (playerSide === 'dark') {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tShip('TIE-fighter', 1),\r\n\t\t\t\t\tShip('TIE-fighter', 1),\r\n\t\t\t\t\tShip('TIE-bomber', 2),\r\n\t\t\t\t\tShip('TIE-bomber', 2),\r\n\t\t\t\t\tShip('Star Destroyer', 3),\r\n\t\t\t\t\tShip('Super Star Destroyer', 4),\r\n\t\t\t\t];\r\n\t\t\t} else {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tShip('Shuttle', 1),\r\n\t\t\t\t\tShip('Shuttle', 1),\r\n\t\t\t\t\tShip('X-wing starfighter', 2),\r\n\t\t\t\t\tShip('X-wing starfighter', 2),\r\n\t\t\t\t\tShip('CR90 corvette', 3),\r\n\t\t\t\t\tShip('MC80 Star Cruiser', 4),\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetShips: () => {\r\n\t\t\tconst shipArray = gameBoard.createShips();\r\n\t\t\tshipArray.map((ship, id) => (ship.id = id + 1));\r\n\t\t\tgameBoard.ships = shipArray;\r\n\t\t\treturn shipArray;\r\n\t\t},\r\n\r\n\t\tchangeShipDirection: (ship = {}) => {\r\n\t\t\tship.direction === 'horizontal' && ship.size > 1\r\n\t\t\t\t? (ship.direction = 'vertical')\r\n\t\t\t\t: (ship.direction = 'horizontal');\r\n\t\t},\r\n\r\n\t\treceiveAttack: (xCord = 0, yCord = 0) => {\r\n\t\t\tconst val = gameBoard.board[yCord - 1][xCord - 1];\r\n\t\t\tif (val === '•' || val === '※') return false;\r\n\t\t\tif (val === '_' || val === '*') {\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '•';\r\n\t\t\t} else if (Number.isInteger(parseInt(val))) {\r\n\t\t\t\tattackShip(gameBoard, xCord, yCord);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tcheckPlacement: (ship = {}, xCord = 0, yCord = 0) => {\r\n\t\t\txCord = parseFloat(xCord);\r\n\t\t\tyCord = parseFloat(yCord);\r\n\t\t\tlet isLegalPlace = true;\r\n\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\tif (ship.size + xCord - 1 > BOARD_SIDE_SIZE) {\r\n\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\t\t\tif (gameBoard.board[yCord - 1][xCord - 1 + i] !== '_') {\r\n\t\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\tif (ship.size + yCord - 1 > BOARD_SIDE_SIZE) {\r\n\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\t\t\tif (gameBoard.board[yCord - 1 + i][xCord - 1] !== '_') {\r\n\t\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn isLegalPlace;\r\n\t\t},\r\n\r\n\t\tplaceShip: (ship = {}, xCord = 0, yCord = 0) => {\r\n\t\t\tif (\r\n\t\t\t\tgameBoard.shipCount < FLEET_QUANTITY &&\r\n\t\t\t\tgameBoard.checkPlacement(ship, xCord, yCord)\r\n\t\t\t) {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + i] = `${ship.id}`;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 1] = `${ship.id}`;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tgameBoard.markShipArea('*', ship, xCord, yCord);\r\n\t\t\t\tship.onBoard = true;\r\n\t\t\t\tship.coordinates = [parseFloat(xCord), parseFloat(yCord)];\r\n\t\t\t\t// console.log(\r\n\t\t\t\t// \t`${ship.name} was placed ${ship.direction} on ${ship.coordinates}`\r\n\t\t\t\t// );\r\n\t\t\t\tgameBoard.shipCount++;\r\n\t\t\t\tif (gameBoard.shipCount === FLEET_QUANTITY) {\r\n\t\t\t\t\tgameBoard.isReady = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmarkShipArea: (\r\n\t\t\tmark = '•',\r\n\t\t\tship = {},\r\n\t\t\txCord = ship.coordinates[0],\r\n\t\t\tyCord = ship.coordinates[1]\r\n\t\t) => {\r\n\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + i] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + i] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// vertical areas\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\tif (yCord < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xCord - 1 + ship.size < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + ship.size] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + ship.size] = `${mark}`;\r\n\t\t\t\t\t\tif (yCord < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + ship.size] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tif (xCord < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1] = `${mark}`;\r\n\t\t\t\t\t\tif (xCord < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord - 1 + ship.size < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 1] = `${mark}`;\r\n\t\t\t\t\t\tif (xCord < BOARD_SIDE_SIZE) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tplaceShipsAtRandom: () => {\r\n\t\t\tconst reversedShips = [...gameBoard.ships].reverse();\r\n\t\t\twhile (gameBoard.shipCount < FLEET_QUANTITY) {\r\n\t\t\t\treversedShips.forEach((ship) => {\r\n\t\t\t\t\tgameBoard.randomlyPlaceShip(ship);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trandomlyPlaceShip: (ship = {}) => {\r\n\t\t\tif (ship.onBoard !== true) {\r\n\t\t\t\tconst randX = Math.ceil(Math.random() * BOARD_SIDE_SIZE);\r\n\t\t\t\tconst randY = Math.ceil(Math.random() * BOARD_SIDE_SIZE);\r\n\t\t\t\tif (Math.random() * 2 > 1) gameBoard.changeShipDirection(ship);\r\n\t\t\t\tgameBoard.placeShip(ship, randX, randY);\r\n\t\t\t\tgameBoard.randomlyPlaceShip(ship);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckGameOver: () => {\r\n\t\t\tif (gameBoard.shipCount === 0) {\r\n\t\t\t\tgameBoard.isGameOver = true;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t};\r\n\treturn gameBoard;\r\n};\r\n","import { GameBoard as Board } from './Battleships';\r\nimport { makeSmartAIMove, makeRandomAIMove } from './helperFunctions';\r\n\r\nexport const Player = (name, side, type = 'human', gameBoard) => {\r\n\tconst player = {\r\n\t\tname,\r\n\t\tside,\r\n\t\ttype,\r\n\t\tgameBoard,\r\n\t\tlastAIMove: '',\r\n\t\tnextAIMove: '',\r\n\t\tisWinner: false,\r\n\t\tisMakingMove: false,\r\n\t\tmakeMove: (opponent, xCord, yCord) => {\r\n\t\t\tconst legal = opponent.gameBoard.receiveAttack(xCord, yCord);\r\n\t\t\tif (legal) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmakeAIMove: (opponent, isSmart = false) => {\r\n\t\t\tisSmart ? makeSmartAIMove(opponent) : makeRandomAIMove(opponent);\r\n\t\t},\r\n\t};\r\n\treturn player;\r\n};\r\n\r\nexport const CreatePlayer = (side, type) => {\r\n\tconst gameBoard = Board(side);\r\n\tgameBoard.makeBoard();\r\n\tgameBoard.getShips(`${side}`);\r\n\tif (type === 'computer') {\r\n\t\tgameBoard.placeShipsAtRandom();\r\n\t}\r\n\tlet name;\r\n\tif (side === 'dark') {\r\n\t\tname = 'Lord Sith';\r\n\t} else {\r\n\t\tname = 'Jedi Master';\r\n\t}\r\n\treturn Player(name, side, type, gameBoard);\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header-row\">\r\n\t\t\t\t<h1 className=\"col-sm-8\">\r\n\t\t\t\t\t<span className=\"title-main\">starships </span>{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://github.com/wblachut/react-project-battleships\"\r\n\t\t\t\t\tclassName=\"gh-btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"gh-icon\" />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<nav></nav>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../style/Intro.css';\r\n\r\nconst Intro = ({ setAppStatus }) => {\r\n\tconst onSkipIntro = () => {\r\n\t\tsetAppStatus('newGame');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"fade\">\r\n\t\t\t<section className=\"star-wars-intro\" onClick={onSkipIntro}>\r\n\t\t\t\t<div className=\"crawl\">\r\n\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t<p>Episode XII</p>\r\n\t\t\t\t\t\t<h1>The Starships</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tIt is a browser battleships game react application styled on the\r\n\t\t\t\t\t\tStar Wars movie by George Lucas. This project was realized on\r\n\t\t\t\t\t\tlearning purpose for The Odin Project curriculum. Main aim of the\r\n\t\t\t\t\t\tproject is to build game logic using Test Driven Development. I hope\r\n\t\t\t\t\t\tyou enjoy it.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">Confront the sith lord...</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">May the force be with you jedi master.</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">Click on the screen to continue!</p>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Intro;\r\n\r\nIntro.propTypes = {\r\n\tsetAppStatus: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../style/Intro.css';\r\n\r\nconst NewGame = ({ setAppStatus, setWinner }) => {\r\n\tconst onStartGame = () => {\r\n\t\tsetAppStatus('game');\r\n\t\tsetWinner(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"new-game\">\r\n\t\t\t\t<div className=\"new-game-wrapper\"></div>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"new-game-btn star-btn\" onClick={onStartGame}>\r\n\t\t\t\tContend the Empire\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewGame;\r\n\r\nNewGame.propTypes = {\r\n\tsetAppStatus: PropTypes.func.isRequired,\r\n\tsetWinner: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable no-undef */ // process.env\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GameBoard = (props) => {\r\n\tconst { player, board, isGameReady } = props;\r\n\treturn (\r\n\t\t<div className={`${player.side} game-board`}>\r\n\t\t\t<div className={`${player.side} side-title`}>The {player.side} side</div>\r\n\r\n\t\t\t<div className=\"outer-wrapper\">\r\n\t\t\t\t{/* {BOARD} */}\r\n\t\t\t\t<div className=\"board-wrapper\">\r\n\t\t\t\t\t<div className=\"column-description\">\r\n\t\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className=\"numbers\" key={[i + 1]}>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t{[i + 1]}{' '}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"inner-wrapper\">\r\n\t\t\t\t\t\t<div className={`${player.side} row-description`}>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className=\"letters\" key={`letter${i}`}>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t{(i + 10).toString(36)}{' '}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* grid */}\r\n\t\t\t\t\t\t<div className={`${player.side} grid-wrapper ${player.type}`}>\r\n\t\t\t\t\t\t\t{player.gameBoard.board.map((arr, j) =>\r\n\t\t\t\t\t\t\t\tarr.map((element, i) => {\r\n\t\t\t\t\t\t\t\t\tif (player.type === 'human') {\r\n\t\t\t\t\t\t\t\t\t\tif (element === '_' || element === '*') {\r\n\t\t\t\t\t\t\t\t\t\t\tif (element === '_' && !isGameReady) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell droppable\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragOver={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragEnter={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.classList.add('hover');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragLeave={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.classList.remove('hover');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDrop={(e) => props.onPlaceShip(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else if (Number.isInteger(parseInt(element))) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet ship = player.gameBoard.ships[element - 1];\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell ship ship${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{parseFloat(ship.coordinates[0]) === i + 1 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparseFloat(ship.coordinates[1]) === j + 1 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-img-grid ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell hit ship`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"flames\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell empty`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// AI board\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (element === '•') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell hit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"as\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => props.onMakeMove(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isGameReady && (\r\n\t\t\t\t\t<div className=\"ship-menage-wrapper\">\r\n\t\t\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onPlaceRandomly}>\r\n\t\t\t\t\t\t\t\tPlace randomly\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onResetBoard}>\r\n\t\t\t\t\t\t\t\tReset Board\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onFlipShips}>\r\n\t\t\t\t\t\t\t\tFlip Ships\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"ship-wrapper\">\r\n\t\t\t\t\t\t\t{player.gameBoard.ships.map((ship) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t!ship.onBoard && (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-view ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={`ship${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-img ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-ship={ship.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdraggable\r\n\t\t\t\t\t\t\t\t\t\t\t\tonDragStart={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.dataTransfer.setData('ship', e.target.dataset.ship);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{!isGameReady && (\r\n\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"start-game-btn star-btn\"\r\n\t\t\t\t\t\tonClick={props.onStartGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameBoard;\r\n\r\nGameBoard.propTypes = {\r\n\tisGameReady: PropTypes.bool,\r\n\tplayer: PropTypes.object.isRequired,\r\n\tboard: PropTypes.array.isRequired,\r\n\tonMakeMove: PropTypes.func,\r\n\tonPlaceShip: PropTypes.func,\r\n\tonFlipShips: PropTypes.func,\r\n\tonPlaceRandomly: PropTypes.func,\r\n\tonResetBoard: PropTypes.func,\r\n\tonStartGame: PropTypes.func,\r\n};\r\n\r\nGameBoard.defaultProps = {\r\n\tisGameReady: false,\r\n\tonMakeMove: () => {},\r\n\tonPlaceShip: () => {},\r\n\tonFlipShips: () => {},\r\n\tonPlaceRandomly: () => {},\r\n\tonResetBoard: () => {},\r\n\tonStartGame: () => {},\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n// import { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport '../style/Game.css';\r\nimport GameBoard from './GameBoard';\r\n\r\nconst Game = (props) => {\r\n\tconst { player, opponent } = props;\r\n\tconst [isGameReady, setGameReady] = useState(false);\r\n\tconst [board, setBoard] = useState([...player.gameBoard.board]);\r\n\tconst [opponentBoard, setOpponentBoard] = useState([\r\n\t\t...opponent.gameBoard.board,\r\n\t]);\r\n\tconst [EnemyShipCount, setEnemyShipCount] = useState(\r\n\t\topponent.gameBoard.shipCount\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePlayerShipDisplay();\r\n\t}, [board]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandleComputerShipDisplay();\r\n\t}, [EnemyShipCount]);\r\n\r\n\tconst onPlaceRandomly = () => {\r\n\t\tonResetBoard();\r\n\t\tplayer.gameBoard.placeShipsAtRandom();\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t};\r\n\r\n\tconst onFlipShips = () => {\r\n\t\tplayer.gameBoard.ships.forEach((ship) => {\r\n\t\t\tif (!ship.onBoard) player.gameBoard.changeShipDirection(ship);\r\n\t\t});\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t\tdocument.querySelector('.ship-wrapper').classList.toggle('flipped');\r\n\t};\r\n\r\n\tconst onResetBoard = () => {\r\n\t\tplayer.gameBoard.makeBoard();\r\n\t\tplayer.gameBoard.getShips();\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t};\r\n\r\n\tconst onPlaceShip = (e) => {\r\n\t\tconst y = e.target.dataset.cord.split(',')[0];\r\n\t\tconst x = e.target.dataset.cord.split(',')[1];\r\n\t\tconst shipID = e.dataTransfer.getData('ship');\r\n\t\tconst ship = player.gameBoard.ships[shipID - 1];\r\n\t\tplayer.gameBoard.placeShip(ship, x, y);\r\n\t\t// console.table(board);\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t};\r\n\r\n\tconst onStartGame = () => {\r\n\t\tif (player.gameBoard.isReady) setGameReady(true);\r\n\t};\r\n\r\n\tconst onMakeMove = (e) => {\r\n\t\tconst y = e.target.dataset.cord.split(',')[0];\r\n\t\tconst x = e.target.dataset.cord.split(',')[1];\r\n\t\tif (player.makeMove(opponent, x, y) === true) {\r\n\t\t\tsetOpponentBoard([...opponent.gameBoard.board]);\r\n\t\t\tsetEnemyShipCount(opponent.gameBoard.shipCount);\r\n\t\t\t// console.table(opponentBoard);\r\n\t\t\tif (opponent.gameBoard.isGameOver) {\r\n\t\t\t\tonEndGame(player);\r\n\t\t\t}\r\n\t\t\tonAIMove();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onAIMove = () => {\r\n\t\topponent.makeAIMove(player);\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t\t// console.table(board);\r\n\t\tif (player.gameBoard.isGameOver) {\r\n\t\t\tonEndGame(opponent);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onEndGame = (winner) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tprops.setWinner(winner);\r\n\t\t\tprops.setAppStatus('announcer');\r\n\t\t}, 500);\r\n\t};\r\n\r\n\tconst handlePlayerShipDisplay = () => {\r\n\t\tplayer.gameBoard.ships.map((ship) => {\r\n\t\t\tmountShip(player, ship);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleComputerShipDisplay = () => {\r\n\t\topponent.gameBoard.ships.map((ship) => {\r\n\t\t\tif (ship.isSunk() === true) {\r\n\t\t\t\tmountShip(opponent, ship);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst mountShip = (owner, ship) => {\r\n\t\tif (ship.onBoard) {\r\n\t\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]];\r\n\t\t\tconst boardDiv = document.querySelector(`.${owner.side}`);\r\n\t\t\tconst startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`);\r\n\t\t\tif (!startingCell.querySelector('.ship-img-grid')) {\r\n\t\t\t\tconst shipImg = document.createElement('img');\r\n\t\t\t\tshipImg.src =\r\n\t\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\t\tprocess.env.PUBLIC_URL + `/images/${owner.side}${ship.id}.png`;\r\n\t\t\t\tshipImg.alt = `ship-${owner.side}${ship.id}`;\r\n\t\t\t\tshipImg.classList.add(`ship-img-grid`);\r\n\t\t\t\tshipImg.classList.add(ship.direction);\r\n\t\t\t\tshipImg.targetAble = false;\r\n\t\t\t\tstartingCell.appendChild(shipImg);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isGameReady ? (\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t<GameBoard player={player} board={board} isGameReady={isGameReady} />\r\n\t\t\t\t\t<GameBoard\r\n\t\t\t\t\t\tplayer={opponent}\r\n\t\t\t\t\t\tboard={opponentBoard}\r\n\t\t\t\t\t\tonMakeMove={onMakeMove}\r\n\t\t\t\t\t\tisGameReady={isGameReady}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t{/* <CSSTransition in={!isGameReady} timeout={1000} classNames=\"swipe\"> */}\r\n\t\t\t\t\t<GameBoard\r\n\t\t\t\t\t\tplayer={player}\r\n\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\tisGameReady={isGameReady}\r\n\t\t\t\t\t\tsetGameReady={setGameReady}\r\n\t\t\t\t\t\tonFlipShips={onFlipShips}\r\n\t\t\t\t\t\tonPlaceShip={onPlaceShip}\r\n\t\t\t\t\t\tonPlaceRandomly={onPlaceRandomly}\r\n\t\t\t\t\t\tonResetBoard={onResetBoard}\r\n\t\t\t\t\t\tonStartGame={onStartGame}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* </CSSTransition> */}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n\r\nGame.propTypes = {\r\n\tplayer: PropTypes.object,\r\n\tboard: PropTypes.array,\r\n\tsetBoard: PropTypes.func,\r\n\topponent: PropTypes.object,\r\n\topponentBoard: PropTypes.array,\r\n\tsetOpponentBoard: PropTypes.func,\r\n\tPlayerOne: PropTypes.object,\r\n\tPlayerTwo: PropTypes.object.isRequired,\r\n\tgameReady: PropTypes.bool,\r\n\tsetGameReady: PropTypes.func,\r\n\twinner: PropTypes.object,\r\n\tsetWinner: PropTypes.func,\r\n\tsetAppStatus: PropTypes.func,\r\n};\r\n\r\nGame.defaultProps = {\r\n\tsetBoard: () => {},\r\n\tsetOpponentBoard: () => {},\r\n\tgameReady: false,\r\n\tsetGameReady: () => {},\r\n\tsetWinner: () => {},\r\n\tsetAppStatus: () => {},\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Announcer = ({ winner, setAppStatus }) => {\r\n\tconst onPlayAgain = () => {\r\n\t\tsetAppStatus('newGame');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={`announcer ${winner.side}`}>\r\n\t\t\t\t<h1>{winner.name} has won!</h1>\r\n\t\t\t\t{winner.side === 'light' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tHrrmmm. A true leader you are. About your tactical prowess all\r\n\t\t\t\t\t\tgalaxies should know !\r\n\t\t\t\t\t\t<div className={`img-wrapper ${winner.side}`}></div>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t\t{winner.side === 'dark' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tYou don’t know the power of the dark side! I must obey my master...{' '}\r\n\t\t\t\t\t\t<div className={`img-wrapper ${winner.side}`}></div>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<button className=\"new-game-btn star-btn\" onClick={onPlayAgain}>\r\n\t\t\t\tPlay again!\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Announcer;\r\n\r\nAnnouncer.propTypes = {\r\n\twinner: PropTypes.object.isRequired,\r\n\tsetAppStatus: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { CreatePlayer } from './Player';\n\nimport Header from './components/Header';\nimport Intro from './components/Intro';\nimport NewGame from './components/NewGame';\nimport Game from './components/Game';\nimport Announcer from './components/Announcer';\nimport './style/App.css';\n\nconst App = () => {\n\tconst [appStatus, setAppStatus] = useState('intro');\n\tconst [winner, setWinner] = useState(null);\n\tlet PlayerOne = CreatePlayer('light', 'human');\n\tlet PlayerTwo = CreatePlayer('dark', 'computer');\n\tconsole.clear();\n\n\tlet timeout = 2000;\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'intro'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t\tonExited={() => setAppStatus('newGame')}\n\t\t\t>\n\t\t\t\t<Intro setAppStatus={setAppStatus} appStatus={appStatus} />\n\t\t\t</CSSTransition>\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'newGame'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t>\n\t\t\t\t<NewGame setAppStatus={setAppStatus} setWinner={setWinner} />\n\t\t\t</CSSTransition>\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'game'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t>\n\t\t\t\t<Game\n\t\t\t\t\tplayer={PlayerOne}\n\t\t\t\t\topponent={PlayerTwo}\n\t\t\t\t\tsetWinner={setWinner}\n\t\t\t\t\twinner={winner}\n\t\t\t\t\tsetAppStatus={setAppStatus}\n\t\t\t\t/>\n\t\t\t</CSSTransition>\n\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'announcer'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t>\n\t\t\t\t<Announcer winner={winner} setAppStatus={setAppStatus} />\n\t\t\t</CSSTransition>\n\n\t\t\t<div className=\"stars\"></div>\n\t\t\t<div className=\"twinkling\"></div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport './style/night-sky.css';\nimport App from './App';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nlibrary.add(fab);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}