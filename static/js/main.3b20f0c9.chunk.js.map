{"version":3,"sources":["Battleships.js","Player.js","components/Header.jsx","components/Intro.jsx","components/NewGame.jsx","components/GameBoard.jsx","components/Game.jsx","components/Announcer.jsx","App.js","index.js"],"names":["Ship","name","size","direction","ship","hitState","Array","fill","hit","nextHit","findIndex","field","isSunk","includes","CreatePlayer","side","type","gameBoard","playerSide","board","ships","shipCount","isReady","isGameOver","emptyBoard","makeBoard","createShips","getShips","shipArray","map","id","changeShipDirection","receiveAttack","xCord","yCord","isLegalMove","val","Number","isInteger","parseInt","attackedShip","markShipArea","checkGameOver","console","log","checkPlacement","parseFloat","isLegalPlace","i","placeShip","forEach","cell","onBoard","coordinates","mark","placeShipsAtRandom","reversedShips","reverse","randomlyPlaceShip","randX","Math","ceil","random","randY","Board","player","lastAIMove","nextAIMove","isWinner","isMakingMove","makeMove","opponent","makeAIMove","lastX","lastY","lastMoveStatus","passMove","Player","Header","className","href","icon","Intro","setAppStatus","onClick","NewGame","setWinner","GameBoard","props","isGameReady","arr","toString","j","element","data-cord","onDragOver","e","preventDefault","onDragEnter","target","classList","add","onDragLeave","remove","onDrop","onPlaceShip","src","process","alt","onMakeMove","onPlaceRandomly","onResetBoard","onFlipShips","data-ship","draggable","onDragStart","dataTransfer","setData","dataset","onStartGame","Game","useState","setGameReady","setBoard","opponentBoard","setOpponentBoard","EnemyShipCount","setEnemyShipCount","useEffect","handlePlayerShipDisplay","handleComputerShipDisplay","onAIMove","onEndGame","winner","setTimeout","mountShip","owner","cords","startingCell","document","querySelector","shipImg","createElement","targetAble","appendChild","y","cord","split","x","CSSTransition","in","timeout","classNames","shipID","getData","defaultProps","PlayerOne","PlayerTwo","gameReady","Announcer","App","appStatus","clear","unmountOnExit","onExited","library","fab","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b20f0c9.chunk.js","sourcesContent":["export const Ship = (name = 'ship', size = 1, direction = 'horizontal') => {\r\n\tconst ship = {\r\n\t\tname,\r\n\t\tsize,\r\n\t\tdirection,\r\n\t\thitState: Array(size).fill('o'),\r\n\t\thit: () => {\r\n\t\t\tconst nextHit = ship.hitState.findIndex((field) => field === 'o');\r\n\t\t\tship.hitState[nextHit] = 'hit';\r\n\t\t},\r\n\t\tisSunk: () => !ship.hitState.includes('o'),\r\n\t};\r\n\treturn ship;\r\n};\r\n\r\nexport const GameBoard = (playerSide) => {\r\n\tconst gameBoard = {\r\n\t\tside: playerSide,\r\n\t\tboard: [],\r\n\t\tships: [],\r\n\t\tshipCount: 0,\r\n\t\tisReady: false,\r\n\t\tisGameOver: false,\r\n\r\n\t\temptyBoard: () => {\r\n\t\t\treturn [\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t\t['_', '_', '_', '_', '_', '_', '_', '_', '_', '_'],\r\n\t\t\t];\r\n\t\t},\r\n\t\tmakeBoard: () => {\r\n\t\t\tgameBoard.board = gameBoard.emptyBoard();\r\n\t\t\tgameBoard.shipCount = 0;\r\n\t\t\tgameBoard.isReady = false;\r\n\t\t\tgameBoard.isGameOver = false;\r\n\t\t},\r\n\r\n\t\tcreateShips: (playerSide) => {\r\n\t\t\tif (playerSide === 'dark') {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tShip('TIE-fighter', 1),\r\n\t\t\t\t\tShip('TIE-fighter', 1),\r\n\t\t\t\t\tShip('TIE-bomber', 2),\r\n\t\t\t\t\tShip('TIE-bomber', 2),\r\n\t\t\t\t\tShip('Star Destroyer', 3),\r\n\t\t\t\t\tShip('Super Star Destroyer', 4),\r\n\t\t\t\t];\r\n\t\t\t} else {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tShip('Shuttle', 1),\r\n\t\t\t\t\tShip('Shuttle', 1),\r\n\t\t\t\t\tShip('X-wing starfighter', 2),\r\n\t\t\t\t\tShip('X-wing starfighter', 2),\r\n\t\t\t\t\tShip('CR90 corvette', 3),\r\n\t\t\t\t\tShip('MC80 Star Cruiser', 4),\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetShips: () => {\r\n\t\t\tconst shipArray = gameBoard.createShips();\r\n\t\t\tshipArray.map((ship, id) => (ship.id = id + 1));\r\n\t\t\tgameBoard.ships = shipArray;\r\n\t\t\treturn shipArray;\r\n\t\t},\r\n\r\n\t\tchangeShipDirection: (ship) => {\r\n\t\t\tship.direction === 'horizontal' && ship.size > 1\r\n\t\t\t\t? (ship.direction = 'vertical')\r\n\t\t\t\t: (ship.direction = 'horizontal');\r\n\t\t},\r\n\t\treceiveAttack: (xCord, yCord) => {\r\n\t\t\tlet isLegalMove = true;\r\n\t\t\tconst val = gameBoard.board[yCord - 1][xCord - 1];\r\n\t\t\tif (val === '_' || val === '*') {\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '•';\r\n\t\t\t} else if (Number.isInteger(parseInt(val))) {\r\n\t\t\t\tconst attackedShip = gameBoard.ships[parseInt(val) - 1];\r\n\t\t\t\tattackedShip.hit();\r\n\t\t\t\tgameBoard.board[yCord - 1][xCord - 1] = '※';\r\n\r\n\t\t\t\tif (attackedShip.isSunk()) {\r\n\t\t\t\t\tgameBoard.markShipArea('•', attackedShip);\r\n\t\t\t\t\tgameBoard.shipCount--;\r\n\t\t\t\t\tgameBoard.checkGameOver();\r\n\t\t\t\t\tif (gameBoard.isGameOver === true) console.log('GAME OVER!');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisLegalMove = false;\r\n\t\t\t}\r\n\t\t\treturn isLegalMove;\r\n\t\t},\r\n\r\n\t\tcheckPlacement: (ship, xCord, yCord) => {\r\n\t\t\txCord = parseFloat(xCord);\r\n\t\t\tyCord = parseFloat(yCord);\r\n\t\t\tlet isLegalPlace = true;\r\n\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\tif (ship.size + xCord - 1 > 10) {\r\n\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\t\t\tif (gameBoard.board[yCord - 1][xCord - 1 + i] !== '_') {\r\n\t\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\tif (ship.size + yCord - 1 > 10) {\r\n\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < ship.size; i++) {\r\n\t\t\t\t\tif (gameBoard.board[yCord - 1 + i][xCord - 1] !== '_') {\r\n\t\t\t\t\t\tisLegalPlace = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// isLegalPlace ? console.log('legal place') : console.log('Illegal place!');\r\n\t\t\treturn isLegalPlace;\r\n\t\t},\r\n\r\n\t\tplaceShip: (ship, xCord, yCord) => {\r\n\t\t\tif (\r\n\t\t\t\tgameBoard.shipCount < 6 &&\r\n\t\t\t\tgameBoard.checkPlacement(ship, xCord, yCord)\r\n\t\t\t) {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + i] = `${ship.id}`;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 1] = `${ship.id}`;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tgameBoard.markShipArea('*', ship, xCord, yCord);\r\n\t\t\t\tship.onBoard = true;\r\n\t\t\t\tship.coordinates = [parseFloat(xCord), parseFloat(yCord)];\r\n\t\t\t\t// console.log(\r\n\t\t\t\t// \t`${ship.name} was placed ${ship.direction} on ${ship.coordinates}`\r\n\t\t\t\t// );\r\n\t\t\t\tgameBoard.shipCount++;\r\n\t\t\t\tif (gameBoard.shipCount === 6) {\r\n\t\t\t\t\tgameBoard.isReady = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmarkShipArea: (\r\n\t\t\tmark,\r\n\t\t\tship,\r\n\t\t\txCord = ship.coordinates[0],\r\n\t\t\tyCord = ship.coordinates[1]\r\n\t\t) => {\r\n\t\t\tship.hitState.forEach((cell, i) => {\r\n\t\t\t\tif (ship.direction === 'horizontal') {\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + i] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + i] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// vertical areas\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xCord - 1 + ship.size < 10) {\r\n\t\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1 + ship.size] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1][xCord - 1 + ship.size] = `${mark}`;\r\n\t\t\t\t\t\tif (yCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord][xCord - 1 + ship.size] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (ship.direction === 'vertical') {\r\n\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + i][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// horizontal areas\r\n\t\t\t\t\tif (yCord > 1) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord - 1] = `${mark}`;\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 2][xCord] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yCord - 1 + ship.size < 10) {\r\n\t\t\t\t\t\tif (xCord > 1) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 2] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord - 1] = `${mark}`;\r\n\t\t\t\t\t\tif (xCord < 10) {\r\n\t\t\t\t\t\t\tgameBoard.board[yCord - 1 + ship.size][xCord] = `${mark}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tplaceShipsAtRandom: () => {\r\n\t\t\tconst reversedShips = [...gameBoard.ships].reverse();\r\n\t\t\twhile (gameBoard.shipCount < 6) {\r\n\t\t\t\treversedShips.forEach((ship) => {\r\n\t\t\t\t\tgameBoard.randomlyPlaceShip(ship);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trandomlyPlaceShip: (ship) => {\r\n\t\t\tif (ship.onBoard !== true) {\r\n\t\t\t\tconst randX = Math.ceil(Math.random() * 10);\r\n\t\t\t\tconst randY = Math.ceil(Math.random() * 10);\r\n\t\t\t\tif (Math.random() * 2 > 1) gameBoard.changeShipDirection(ship);\r\n\t\t\t\tgameBoard.placeShip(ship, randX, randY);\r\n\t\t\t\tgameBoard.randomlyPlaceShip(ship);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckGameOver: () => {\r\n\t\t\tif (gameBoard.shipCount === 0) {\r\n\t\t\t\tgameBoard.isGameOver = true;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t};\r\n\treturn gameBoard;\r\n};\r\n","import { GameBoard as Board } from './Battleships';\r\n\r\nexport const Player = (name, side, type = 'human', gameBoard) => {\r\n\tconst player = {\r\n\t\tname,\r\n\t\tside,\r\n\t\ttype,\r\n\t\tgameBoard,\r\n\t\tlastAIMove: '',\r\n\t\tnextAIMove: '',\r\n\t\tisWinner: false,\r\n\t\tisMakingMove: false,\r\n\t\tmakeMove: (opponent, xCord, yCord) => {\r\n\t\t\tconst legal = opponent.gameBoard.receiveAttack(xCord, yCord);\r\n\t\t\tif (legal) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmakeAIMove: (opponent, isSmart = true) => {\r\n\t\t\tif (isSmart) {\r\n\t\t\t\tconsole.log('Smart AI, ha ha !');\r\n\t\t\t\tconst lastX = player.lastAIMove[0];\r\n\t\t\t\tconst lastY = player.lastAIMove[1];\r\n\t\t\t\tconst lastMoveStatus = player.lastAIMove[2];\r\n\t\t\t\tconsole.log(lastX, lastY);\r\n\t\t\t\t// const legal = opponent.gameBoard.receiveAttack(lastX, lastY);\r\n\t\t\t\t// console.log(legal);\r\n\t\t\t\tif (lastMoveStatus === '※') {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tplayer.nextAIMove === 'down' &&\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX - 1, lastY) === true\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tconsole.log('was a hit moving down');\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX - 1, lastY);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tplayer.nextAIMove === 'up' &&\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX + 1, lastY) === true\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tconsole.log('was a hit moving up');\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX + 1, lastY);\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tplayer.nextAIMove === 'left' &&\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX, lastY - 1) === true\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tconsole.log('was a hit moving left');\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX, lastY - 1);\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tplayer.nextAIMove === 'right' &&\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX, lastY + 1) === true\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tconsole.log('was a hit moving right');\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX, lastY + 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (lastMoveStatus === '•') {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tplayer.nextAIMove === 'down' &&\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX + 1, lastY) === true\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tplayer.nextAIMove = 'up';\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX + 1, lastY);\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tplayer.nextAIMove === 'up' &&\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX, lastY - 1) === true\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tplayer.nextAIMove = 'left';\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX - 1, lastY);\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\tplayer.nextAIMove === 'left' &&\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX, lastY - 1) === true\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tplayer.nextAIMove = 'right';\r\n\t\t\t\t\t\topponent.gameBoard.receiveAttack(lastX - 1, lastY);\r\n\t\t\t\t\t} else if (player.nextAIMove === 'right') {\r\n\t\t\t\t\t\tplayer.nextAIMove = '';\r\n\t\t\t\t\t\tplayer.makeAIMove();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// move down\r\n\t\t\t\t// check moving down, if true move down, else check moving up -> move up\r\n\t\t\t\t// if hit move up is miss\r\n\t\t\t\t// if miss move left\r\n\t\t\t\t// if miss move right\r\n\t\t\t\t// if is miss return\r\n\t\t\t}\r\n\t\t\tconst randX = Math.ceil(Math.random() * 10);\r\n\t\t\tconst randY = Math.ceil(Math.random() * 10);\r\n\t\t\tconst legal = opponent.gameBoard.receiveAttack(randX, randY);\r\n\t\t\tif (legal) {\r\n\t\t\t\topponent.gameBoard.receiveAttack(randX, randY);\r\n\t\t\t\tplayer.lastAIMove = [randX, randY, gameBoard.board[(randX, randY)]];\r\n\t\t\t\tif (\r\n\t\t\t\t\topponent.gameBoard.board[(randX, randY)] === '※' &&\r\n\t\t\t\t\tplayer.nextAIMove === ''\r\n\t\t\t\t)\r\n\t\t\t\t\tplayer.nextAIMove = 'down';\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tplayer.makeAIMove(opponent);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// not used so far\r\n\t\tpassMove: (opponent) => {\r\n\t\t\tplayer.isMakingMove = false;\r\n\t\t\topponent.isMakingMove = true;\r\n\t\t},\r\n\t};\r\n\treturn player;\r\n};\r\n\r\nexport const CreatePlayer = (side, type) => {\r\n\tconst gameBoard = Board(side);\r\n\tgameBoard.makeBoard();\r\n\tgameBoard.getShips(`${side}`);\r\n\tif (type === 'computer') {\r\n\t\tgameBoard.placeShipsAtRandom();\r\n\t}\r\n\tlet name;\r\n\tif (side === 'dark') {\r\n\t\tname = 'Lord Sith';\r\n\t} else {\r\n\t\tname = 'Jedi Master';\r\n\t}\r\n\treturn Player(name, side, type, gameBoard);\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header-row\">\r\n\t\t\t\t<h1 className=\"col-sm-8\">\r\n\t\t\t\t\t<span className=\"title-main\">StarShips </span>{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://github.com/wblachut/react-project-battleships\"\r\n\t\t\t\t\tclassName=\"gh-btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"gh-icon\" />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<nav></nav>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../style/Intro.css';\r\n\r\nconst Intro = ({ setAppStatus }) => {\r\n\tconst onSkipIntro = () => {\r\n\t\tsetAppStatus('newGame');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"fade\">\r\n\t\t\t<section className=\"star-wars-intro\" onClick={onSkipIntro}>\r\n\t\t\t\t<div className=\"crawl\">\r\n\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t<p>Episode XII</p>\r\n\t\t\t\t\t\t<h1>The Starships</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tIt is a browser battleships game react application styled on the\r\n\t\t\t\t\t\tStar Wars movie by George Lucas. This project was realized on\r\n\t\t\t\t\t\tlearning purpose for The Odin Project curriculum. Main aim of the\r\n\t\t\t\t\t\tproject is to build game logic using Test Driven Development. I hope\r\n\t\t\t\t\t\tyou enjoy it.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">Confront the sith lord...</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">May the force be with you jedi master!</p>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<p className=\"p-center\">\r\n\t\t\t\t\t\tClick on the screen to continue to the game!\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Intro;\r\n\r\nIntro.propTypes = {\r\n\tsetAppStatus: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../style/Intro.css';\r\n\r\nconst NewGame = ({ setAppStatus, setWinner }) => {\r\n\tconst onStartGame = () => {\r\n\t\tsetAppStatus('game');\r\n\t\tsetWinner(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"new-game\">\r\n\t\t\t\t<div className=\"new-game-wrapper\"></div>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"new-game-btn star-btn\" onClick={onStartGame}>\r\n\t\t\t\tContend the Empire\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewGame;\r\n\r\nNewGame.propTypes = {\r\n\tsetAppStatus: PropTypes.func,\r\n\tsetWinner: PropTypes.func,\r\n};\r\n","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GameBoard = (props) => {\r\n\tconst { player, board, isGameReady } = props;\r\n\t// add outer side column with ships - on destroy add fire gif\r\n\t// make ships render only in React, without vanilla JS\r\n\treturn (\r\n\t\t<div className={`${player.side} game-board`}>\r\n\t\t\t<div className={`${player.side} side-title`}>The {player.side} side</div>\r\n\r\n\t\t\t<div className=\"outer-wrapper\">\r\n\t\t\t\t{/* {BOARD} */}\r\n\t\t\t\t<div className=\"board-wrapper\">\r\n\t\t\t\t\t<div className=\"column-description\">\r\n\t\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className=\"numbers\" key={[i + 1]}>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t{[i + 1]}{' '}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"inner-wrapper\">\r\n\t\t\t\t\t\t<div className={`${player.side} row-description`}>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t{board.map((arr, i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className=\"letters\" key={`letter${i}`}>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t{(i + 10).toString(36)}{' '}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* grid */}\r\n\t\t\t\t\t\t<div className={`${player.side} grid-wrapper ${player.type}`}>\r\n\t\t\t\t\t\t\t{player.gameBoard.board.map((arr, j) =>\r\n\t\t\t\t\t\t\t\tarr.map((element, i) => {\r\n\t\t\t\t\t\t\t\t\tif (player.type === 'human') {\r\n\t\t\t\t\t\t\t\t\t\tif (element === '_' || element === '*') {\r\n\t\t\t\t\t\t\t\t\t\t\tif (element === '_' && !isGameReady) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell droppable\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragOver={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragEnter={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.classList.add('hover');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDragLeave={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.classList.remove('hover');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDrop={(e) => props.onPlaceShip(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else if (Number.isInteger(parseInt(element))) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet ship = player.gameBoard.ships[element - 1];\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell ship ship${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{parseFloat(ship.coordinates[0]) === i + 1 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparseFloat(ship.coordinates[1]) === j + 1 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-img-grid ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell hit ship`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"flames\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`cell empty`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// AI board\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (element === '•') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell empty\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t•\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else if (element === '※') {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell hit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`flame-gif`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/flame.gif'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"as\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-cord={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={[j + 1, i + 1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => props.onMakeMove(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isGameReady && (\r\n\t\t\t\t\t<div className=\"ship-wrapper\">\r\n\t\t\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onPlaceRandomly}>\r\n\t\t\t\t\t\t\t\tPlace randomly\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onResetBoard}>\r\n\t\t\t\t\t\t\t\tReset Board\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className=\"star-btn\" onClick={props.onFlipShips}>\r\n\t\t\t\t\t\t\t\tFlip Ships\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{player.gameBoard.ships.map((ship) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t!ship.onBoard && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"ship-view\" key={`ship${ship.id}`}>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`ship-img ${ship.direction}`}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\tprocess.env.PUBLIC_URL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t`/images/${player.side}${ship.id}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\talt={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={`ship-${player.side}${ship.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\tdata-ship={ship.id}\r\n\t\t\t\t\t\t\t\t\t\t\tdraggable\r\n\t\t\t\t\t\t\t\t\t\t\tonDragStart={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\te.dataTransfer.setData('ship', e.target.dataset.ship);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{!isGameReady && (\r\n\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"start-game-btn star-btn\"\r\n\t\t\t\t\t\tonClick={props.onStartGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameBoard;\r\n\r\nGameBoard.propTypes = {\r\n\tisGameReady: PropTypes.bool,\r\n\tplayer: PropTypes.object,\r\n\tboard: PropTypes.array,\r\n\tonMakeMove: PropTypes.func,\r\n\tonPlaceShip: PropTypes.func,\r\n\tonFlipShips: PropTypes.func,\r\n\tonPlaceRandomly: PropTypes.func,\r\n\tonResetBoard: PropTypes.func,\r\n\tonStartGame: PropTypes.func,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport '../style/Game.css';\r\nimport GameBoard from './GameBoard';\r\n\r\nconst Game = (props) => {\r\n\tconst { player, opponent } = props;\r\n\tconst [isGameReady, setGameReady] = useState(false);\r\n\tconst [board, setBoard] = useState([...player.gameBoard.board]);\r\n\tconst [opponentBoard, setOpponentBoard] = useState([\r\n\t\t...opponent.gameBoard.board,\r\n\t]);\r\n\tconst [EnemyShipCount, setEnemyShipCount] = useState(\r\n\t\topponent.gameBoard.shipCount\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePlayerShipDisplay();\r\n\t}, [board]);\r\n\r\n\tuseEffect(() => {\r\n\t\thandleComputerShipDisplay();\r\n\t}, [EnemyShipCount]);\r\n\r\n\tconst onPlaceRandomly = () => {\r\n\t\tonResetBoard();\r\n\t\tplayer.gameBoard.placeShipsAtRandom();\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t};\r\n\r\n\tconst onFlipShips = () => {\r\n\t\tplayer.gameBoard.ships.forEach((ship) => {\r\n\t\t\tif (!ship.onBoard) player.gameBoard.changeShipDirection(ship);\r\n\t\t});\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t};\r\n\r\n\tconst onResetBoard = () => {\r\n\t\tplayer.gameBoard.makeBoard();\r\n\t\tplayer.gameBoard.getShips();\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t};\r\n\r\n\tconst onPlaceShip = (e) => {\r\n\t\tconst y = e.target.dataset.cord.split(',')[0];\r\n\t\tconst x = e.target.dataset.cord.split(',')[1];\r\n\t\tconst shipID = e.dataTransfer.getData('ship');\r\n\t\tconst ship = player.gameBoard.ships[shipID - 1];\r\n\t\tplayer.gameBoard.placeShip(ship, x, y);\r\n\t\t// console.table(board);\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t};\r\n\r\n\tconst onStartGame = () => {\r\n\t\tif (player.gameBoard.isReady) setGameReady(true);\r\n\t};\r\n\r\n\tconst onMakeMove = (e) => {\r\n\t\tconst y = e.target.dataset.cord.split(',')[0];\r\n\t\tconst x = e.target.dataset.cord.split(',')[1];\r\n\t\tif (player.makeMove(opponent, x, y) === true) {\r\n\t\t\tsetOpponentBoard([...opponent.gameBoard.board]);\r\n\t\t\tsetEnemyShipCount(opponent.gameBoard.shipCount);\r\n\t\t\t// console.table(opponentBoard);\r\n\t\t\tif (opponent.gameBoard.isGameOver) {\r\n\t\t\t\tonEndGame(player);\r\n\t\t\t}\r\n\t\t\tonAIMove();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onAIMove = () => {\r\n\t\topponent.makeAIMove(player);\r\n\t\tsetBoard([...player.gameBoard.board]);\r\n\t\t// console.table(board);\r\n\t\tif (player.gameBoard.isGameOver) {\r\n\t\t\tonEndGame(opponent);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onEndGame = (winner) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tprops.setWinner(winner);\r\n\t\t\tprops.setAppStatus('announcer');\r\n\t\t}, 500);\r\n\t};\r\n\r\n\tconst handlePlayerShipDisplay = () => {\r\n\t\tplayer.gameBoard.ships.map((ship) => {\r\n\t\t\tmountShip(player, ship);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleComputerShipDisplay = () => {\r\n\t\topponent.gameBoard.ships.map((ship) => {\r\n\t\t\tif (ship.isSunk() === true) {\r\n\t\t\t\tmountShip(opponent, ship);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst mountShip = (owner, ship) => {\r\n\t\tif (ship.onBoard) {\r\n\t\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]];\r\n\t\t\tconst boardDiv = document.querySelector(`.${owner.side}`);\r\n\t\t\tconst startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`);\r\n\t\t\tif (!startingCell.querySelector('.ship-img-grid')) {\r\n\t\t\t\tconst shipImg = document.createElement('img');\r\n\t\t\t\tshipImg.src =\r\n\t\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\t\tprocess.env.PUBLIC_URL + `/images/${owner.side}${ship.id}.png`;\r\n\t\t\t\tshipImg.alt = `ship-${owner.side}${ship.id}`;\r\n\t\t\t\tshipImg.classList.add(`ship-img-grid`);\r\n\t\t\t\tshipImg.classList.add(ship.direction);\r\n\t\t\t\tshipImg.targetAble = false;\r\n\t\t\t\tstartingCell.appendChild(shipImg);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isGameReady ? (\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t<GameBoard player={player} board={board} isGameReady={isGameReady} />\r\n\t\t\t\t\t<GameBoard\r\n\t\t\t\t\t\tplayer={opponent}\r\n\t\t\t\t\t\tboard={opponentBoard}\r\n\t\t\t\t\t\tonMakeMove={onMakeMove}\r\n\t\t\t\t\t\tisGameReady={isGameReady}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t<CSSTransition in={!isGameReady} timeout={1000} classNames=\"swipe\">\r\n\t\t\t\t\t\t<GameBoard\r\n\t\t\t\t\t\t\tplayer={player}\r\n\t\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\t\tisGameReady={isGameReady}\r\n\t\t\t\t\t\t\tsetGameReady={setGameReady}\r\n\t\t\t\t\t\t\tonFlipShips={onFlipShips}\r\n\t\t\t\t\t\t\tonPlaceShip={onPlaceShip}\r\n\t\t\t\t\t\t\tonPlaceRandomly={onPlaceRandomly}\r\n\t\t\t\t\t\t\tonResetBoard={onResetBoard}\r\n\t\t\t\t\t\t\tonStartGame={onStartGame}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n\r\nGame.propTypes = {\r\n\tplayer: PropTypes.object,\r\n\tboard: PropTypes.array,\r\n\tsetBoard: PropTypes.func,\r\n\topponent: PropTypes.object,\r\n\topponentBoard: PropTypes.array,\r\n\tsetOpponentBoard: PropTypes.func,\r\n\tPlayerOne: PropTypes.object,\r\n\tPlayerTwo: PropTypes.object,\r\n\tgameReady: PropTypes.bool,\r\n\tsetGameReady: PropTypes.func,\r\n\twinner: PropTypes.object,\r\n\tsetWinner: PropTypes.func,\r\n\tsetAppStatus: PropTypes.func,\r\n};\r\n\r\nGame.defaultProps = {\r\n\tplayer: {},\r\n\tboard: {},\r\n\tsetBoard: () => {},\r\n\topponent: {},\r\n\topponentBoard: [],\r\n\tsetOpponentBoard: () => {},\r\n\tPlayerOne: {},\r\n\tPlayerTwo: {},\r\n\tgameReady: false,\r\n\tsetGameReady: () => {},\r\n\twinner: {},\r\n\tsetWinner: () => {},\r\n\tsetAppStatus: () => {},\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Announcer = ({ winner, setAppStatus }) => {\r\n\tconst onPlayAgain = () => {\r\n\t\tsetAppStatus('newGame');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={`announcer ${winner.side}`}>\r\n\t\t\t\t<h1>{winner.name} has won!</h1>\r\n\t\t\t\t{winner.side === 'light' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tHrrmmm. A true leader you are. About your tactical prowess all\r\n\t\t\t\t\t\tgalaxies should know !\r\n\t\t\t\t\t\t<div className={`img-wrapper ${winner.side}`}></div>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t\t{winner.side === 'dark' && (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tYou don’t know the power of the dark side! I must obey my master...{' '}\r\n\t\t\t\t\t\t<div className={`img-wrapper ${winner.side}`}></div>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<button className=\"new-game-btn star-btn\" onClick={onPlayAgain}>\r\n\t\t\t\tPlay again!\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Announcer;\r\n\r\nAnnouncer.propTypes = {\r\n\twinner: PropTypes.object,\r\n\tsetAppStatus: PropTypes.func,\r\n};\r\n","// eslint-disable-next-line no-unused-vars\nimport React, { useState } from 'react';\nimport { CreatePlayer } from './Player';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Header from './components/Header';\nimport Intro from './components/Intro';\nimport NewGame from './components/NewGame';\nimport Game from './components/Game';\nimport Announcer from './components/Announcer';\nimport './style/App.css';\n\nconst App = () => {\n\tconst [appStatus, setAppStatus] = useState('intro');\n\tconst [winner, setWinner] = useState(null);\n\tlet PlayerOne = CreatePlayer('light', 'human');\n\tlet PlayerTwo = CreatePlayer('dark', 'computer');\n\tconsole.clear();\n\n\tlet timeout = 2000;\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'intro'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t\tonExited={() => setAppStatus('newGame')}\n\t\t\t>\n\t\t\t\t<Intro setAppStatus={setAppStatus} appStatus={appStatus} />\n\t\t\t</CSSTransition>\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'newGame'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t>\n\t\t\t\t<NewGame setAppStatus={setAppStatus} setWinner={setWinner} />\n\t\t\t</CSSTransition>\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'game'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t>\n\t\t\t\t<Game\n\t\t\t\t\tplayer={PlayerOne}\n\t\t\t\t\topponent={PlayerTwo}\n\t\t\t\t\tsetWinner={setWinner}\n\t\t\t\t\twinner={winner}\n\t\t\t\t\tsetAppStatus={setAppStatus}\n\t\t\t\t/>\n\t\t\t</CSSTransition>\n\n\t\t\t<CSSTransition\n\t\t\t\tin={appStatus === 'announcer'}\n\t\t\t\ttimeout={timeout}\n\t\t\t\tclassNames=\"trans\"\n\t\t\t\tunmountOnExit={true}\n\t\t\t>\n\t\t\t\t<Announcer winner={winner} setAppStatus={setAppStatus} />\n\t\t\t</CSSTransition>\n\n\t\t\t<div className=\"stars\"></div>\n\t\t\t<div className=\"twinkling\"></div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport './style/night-sky.css';\nimport App from './App';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nlibrary.add(fab);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}